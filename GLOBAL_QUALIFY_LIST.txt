# グローバル修飾リスト
#
# 【概要】
# このファイルは、Webサイト全体に適用されるコードブロック中の識別子への修飾である。
# 各ページのコードブロックへの修飾のうしろに、このファイルの内容が追加され、適用される。
# 個別ページで指定される修飾の方が優先順位が高くなるため、個別ページで指定されている修飾は上書きされない。
# グローバル修飾リストは、ページ執筆者の作業負担を減らすための機能である。
# コードブロックへの修飾の構文は、 /start_editing/markdown_cpprefjp.md を参照すること。
#
# 【登録ルール】
# 1. 識別子への修飾として頻出するものを登録する
#     1.1 頻出とは基本的にはヘッダを跨いでよく出てくるもの
#     1.2 ただし、ヘッダ内のサンプルコードや使用で頻出し、個別ページでの修飾が作業負担になる場合はその限りではない
# 2. 標準ライブラリのヘッダファイル、モジュールはすべて登録する
# 3. 登録順は、アルファベット順
#     3.1 ライブラリ内でさらにアルファベット順
#     3.2 所属するライブラリに識別子を登録すること
#     3.3 ライブラリ内の識別子は、インデントさせること
#     3.4 インデントはグローバル修飾リストの読み込み時に自動的に削除されるため、インデント自体に構文的な意味はない
# 4. 名前空間は基本的につける (主にサンプルコード用)
#     4.1 ただし、宣言や仕様で頻出する場合には、名前空間なしのものも登録する
# 5. メンバ関数を登録する場合は、合意された衝突しない変数名を使用すること
#     5.1 std::vectorはv、v1、v2、v3
#     5.2 std::initializer_listはil
#     5.3 std::valarrayはva
#     5.4 std::threadはt、t1、t2
#     5.5 std::jthreadはjt
#     5.6 std::error_codeはec
#     5.7 std::error_conditionはecond
# 6. 名前空間の略称は、合意された衝突しない名前を使用すること
#     6.1 std::filesystemはfs
# 7. オーバーロードされている名前は、優先度の高いプライマリ宣言をグローバル修飾リストに登録する
#     7.1 ライブラリごとにオーバーロード・特殊化されているものはグローバル修飾リストに登録せず、個別ページで指定する
#         (std::begin/std::end、std::common_typeなど)

* floating-point-type[italic]
* implementation-defined[italic]
* import std;[link /module/std.md]
* import std.compat;[link /module/std.compat.md]
* thread_local[link /lang/cpp11/thread_local_storage.md]
* decltype(auto)[link /lang/cpp14/decltype_auto.md]
* synth-three-way-result[link /reference/exposition-only/synth-three-way-result.md]
* synth-three-way[link /reference/exposition-only/synth-three-way-result.md]
* <algorithm>[link /reference/algorithm.md]
    * ExecutionPolicy[link /reference/execution/execution/execution_policy.md]
    * ranges::find_if_not[link /reference/algorithm/ranges_find_if_not.md]
    * std::copy[link /reference/algorithm/copy.md]
    * std::copy_n[link /reference/algorithm/copy_n.md]
    * std::for_each[link /reference/algorithm/for_each.md]
    * std::sort[link /reference/algorithm/sort.md]
* <any>[link /reference/any.md]
* <array>[link /reference/array.md]
    * std::array[link /reference/array/array.md]
* <atomic>[link /reference/atomic.md]
    * std::atomic[link /reference/atomic/atomic.md]
    * std::memory_order_acq_rel[link /reference/atomic/memory_order.md]
    * std::memory_order_acquire[link /reference/atomic/memory_order.md]
    * std::memory_order_relaxed[link /reference/atomic/memory_order.md]
    * std::memory_order_release[link /reference/atomic/memory_order.md]
    * std::memory_order_seq_cst[link /reference/atomic/memory_order.md]
* <barrier>[link /reference/barrier.md]
* <bit>[link /reference/bit.md]
* <bitset>[link /reference/bitset.md]
    * std::bitset[link /reference/bitset/bitset.md]
* <cassert>[link /reference/cassert.md]
    * assert[link /reference/cassert/assert.md]
* <cctype>[link /reference/cctype.md]
* <cerrno>[link /reference/cerrno.md]
* <cfenv>[link /reference/cfenv.md]
* <cfloat>[link /reference/cfloat.md]
* <charconv>[link /reference/charconv.md]
* <chrono>[link /reference/chrono.md]
    * std::chrono::days[link /reference/chrono/duration_aliases.md]
    * std::chrono::duration[link /reference/chrono/duration.md]
    * std::chrono::hours[link /reference/chrono/duration_aliases.md]
    * std::chrono::milliseconds[link /reference/chrono/duration_aliases.md]
    * std::chrono::minutes[link /reference/chrono/duration_aliases.md]
    * std::chrono::months[link /reference/chrono/duration_aliases.md]
    * std::chrono::seconds[link /reference/chrono/duration_aliases.md]
    * std::chrono::years[link /reference/chrono/duration_aliases.md]
    * chrono::days[link /reference/chrono/duration_aliases.md]
    * chrono::duration[link /reference/chrono/duration.md]
    * chrono::duration_cast[link /reference/chrono/duration_cast.md]
    * chrono::hours[link /reference/chrono/duration_aliases.md]
    * chrono::microseconds[link /reference/chrono/duration_aliases.md]
    * chrono::milliseconds[link /reference/chrono/duration_aliases.md]
    * chrono::minutes[link /reference/chrono/duration_aliases.md]
    * chrono::months[link /reference/chrono/duration_aliases.md]
    * chrono::nanoseconds[link /reference/chrono/duration_aliases.md]
    * chrono::seconds[link /reference/chrono/duration_aliases.md]
    * chrono::weeks[link /reference/chrono/duration_aliases.md]
    * chrono::years[link /reference/chrono/duration_aliases.md]
    * days[link /reference/chrono/duration_aliases.md]
    * duration[link /reference/chrono/duration.md]
    * duration_cast[link /reference/chrono/duration_cast.md]
    * hours[link /reference/chrono/duration_aliases.md]
    * microseconds[link /reference/chrono/duration_aliases.md]
    * milliseconds[link /reference/chrono/duration_aliases.md]
    * minutes[link /reference/chrono/duration_aliases.md]
    * months[link /reference/chrono/duration_aliases.md]
    * nanoseconds[link /reference/chrono/duration_aliases.md]
    * seconds[link /reference/chrono/duration_aliases.md]
    * weeks[link /reference/chrono/duration_aliases.md]
    * years[link /reference/chrono/duration_aliases.md]
* <climits>[link /reference/climits.md]
* <compare>[link /reference/compare.md]
    * compare_three_way_result_t[link /reference/compare/compare_three_way_result.md]
    * strong_ordering[link /reference/compare/strong_ordering.md]
    * three_way_comparable_with[link /reference/compare/three_way_comparable.md]
    * three_way_comparable[link /reference/compare/three_way_comparable.md]
* <coroutine>[link /reference/coroutine.md]
* <cmath>[link /reference/cmath.md]
* <codecvt>[link /reference/codecvt.md]
* <complex>[link /reference/complex.md]
* <concepts>[link /reference/concepts.md]
    * common_reference_with[link /reference/concepts/common_reference_with.md]
    * common_with[link /reference/concepts/common_with.md]
    * convertible_to[link /reference/concepts/convertible_to.md]
    * copy_constructible[link /reference/concepts/copy_constructible.md]
    * default_initializable[link /reference/concepts/default_initializable.md]
    * equality_comparable[link /reference/concepts/equality_comparable.md]
    * invocable[link /reference/concepts/invocable.md]
    * move_constructible[link /reference/concepts/move_constructible.md]
    * regular_invocable[link /reference/concepts/invocable.md]
    * same_as[link /reference/concepts/same_as.md]
* <condition_variable>[link /reference/condition_variable.md]
    * std::condition_variable[link /reference/condition_variable/condition_variable.md]
* <cstddef>[link /reference/cstddef.md]
    * nullptr_t[link /reference/cstddef/nullptr_t.md]
    * std::nullptr_t[link /reference/cstddef/nullptr_t.md]
    * std::size_t[link /reference/cstddef/size_t.md]
* <cstdint>[link /reference/cstdint.md]
    * std::uint8_t[link /reference/cstdint/uint8_t.md]
    * std::uint16_t[link /reference/cstdint/uint16_t.md]
    * std::uint32_t[link /reference/cstdint/uint32_t.md]
    * std::uint64_t[link /reference/cstdint/uint64_t.md]
    * std::int8_t[link /reference/cstdint/int8_t.md]
    * std::int16_t[link /reference/cstdint/int16_t.md]
    * std::int32_t[link /reference/cstdint/int32_t.md]
    * std::int64_t[link /reference/cstdint/int64_t.md]
* <cstdio>[link /reference/cstdio.md]
* <cstdlib>[link /reference/cstdlib.md]
* <cstring>[link /reference/cstring.md]
* <ctime>[link /reference/ctime.md]
* <debugging>[link /reference/debugging.md]
* <deque>[link /reference/deque/deque.md]
    * std::deque[link /reference/deque/deque.md]
* <exception>[link /reference/exception.md]
* <execution>[link /reference/execution.md]
    * std::execution::par[link /reference/execution/execution/execution_policy.md]
    * std::execution::par_unseq[link /reference/execution/execution/execution_policy.md]
    * std::execution::seq[link /reference/execution/execution/execution_policy.md]
* <expected>[link /reference/expected.md]
    * std::expected[link /reference/expected/expected.md]
* <filesystem>[link /reference/filesystem.md]
    * fe.what()[link /reference/filesystem/filesystem_error/what.md]
    * fs::filesystem_error[link /reference/filesystem/filesystem_error.md]
    * fs::path[link /reference/filesystem/path.md]
* <flat_map>[link /reference/flat_map.md]
* <flat_set>[link /reference/flat_set.md]
* <format>[link /reference/format.md]
* <forward_list>[link /reference/forward_list.md]
    * std::forward_list[link /reference/forward_list/forward_list.md]
* <fstream>[link /reference/fstream.md]
* <functional>[link /reference/functional.md]
    * identity[link /reference/functional/identity.md]
    * ranges::equal_to[link /reference/functional/ranges_equal_to.md]
    * std::identity[link /reference/functional/identity.md]
    * std::ranges::less_equal[link /reference/functional/ranges_less_equal.md]
* <future>[link /reference/future.md]
* <generator>[link /reference/generator.md]
* <initializer_list>[link /reference/initializer_list.md]
    * std::initializer_list[link /reference/initializer_list/initializer_list.md]
    * il.begin()[link /reference/initializer_list/initializer_list/begin.md]
    * il.end()[link /reference/initializer_list/initializer_list/end.md]
* <iomanip>[link /reference/iomanip.md]
* <ios>[link /reference/ios.md]
    * std::boolalpha[link /reference/ios/boolalpha.md]
* <iostream>[link /reference/iostream.md]
    * std::cout[link /reference/iostream/cout.md]
* <istream>[link /reference/istream.md]
    * std::basic_istream[link /reference/istream/basic_istream.md]
* <iterator>[link /reference/iterator.md]
    * bidirectional_iterator[link /reference/iterator/bidirectional_iterator.md]
    * common_iterator[link /reference/iterator/common_iterator.md]
    * contiguous_iterator[link /reference/iterator/contiguous_iterator.md]
    * default_sentinel_t[link /reference/iterator/default_sentinel_t.md]
    * default_sentinel[link /reference/iterator/default_sentinel_t.md]
    * forward_iterator[link /reference/iterator/forward_iterator.md]
    * indirect_binary_predicate[link /reference/iterator/indirect_binary_predicate.md]
    * indirect_unary_predicate[link /reference/iterator/indirect_unary_predicate.md]
    * indirectly_comparable[link /reference/iterator/indirectly_comparable.md]
    * indirectly_swappable[link /reference/iterator/indirectly_swappable.md]
    * input_iterator[link /reference/iterator/input_iterator.md]
    * iterator_traits[link /reference/iterator/iterator_traits.md]
    * iter_difference_t[link /reference/iterator/iter_difference_t.md]
    * iter_rvalue_reference_t[link /reference/iterator/iter_rvalue_reference_t.md]
    * iter_value_t[link /reference/iterator/iter_value_t.md]
    * output_iterator[link /reference/iterator/output_iterator.md]
    * projected[link /reference/iterator/projected.md]
    * projected_value_t[link /reference/iterator/projected_value_t.md]
    * random_access_iterator[link /reference/iterator/random_access_iterator.md]
    * ranges::distance[link /reference/iterator/ranges_distance.md]
    * ranges::iter_move[link /reference/iterator/iter_move.md]
    * ranges::iter_swap[link /reference/iterator/iter_swap.md]
    * sentinel_for[link /reference/iterator/sentinel_for.md]
    * std::back_inserter[link /reference/iterator/back_inserter.md]
    * std::begin[link /reference/iterator/begin.md]
    * std::distance[link /reference/iterator/distance.md]
    * std::end[link /reference/iterator/end.md]
    * std::move_iterator[link /reference/iterator/move_iterator.md]
    * std::move_sentinel[link /reference/iterator/move_sentinel.md]
    * std::next[link /reference/iterator/next.md]
    * std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
    * unreachable_sentinel_t[link /reference/iterator/unreachable_sentinel_t.md]
* <latch>[link /reference/latch.md]
* <limits>[link /reference/limits.md]
    * std::numeric_limits[link /reference/limits/numeric_limits.md]
* <linalg>[link /reference/linalg.md]
* <list>[link /reference/list.md]
    * std::list[link /reference/list/list.md]
* <locale>[link /reference/locale.md]
* <map>[link /reference/map.md]
    * std::map[link /reference/map/map.md]
* <mdspan>[link /reference/mdspan.md]
    * std::extents[link /reference/mdspan/extents.md]
    * std::dextents[link /reference/mdspan/extents.md]
    * std::mdspan[link /reference/mdspan/mdspan.md]
* <memory>[link /reference/memory.md]
    * addressof[link /reference/memory/addressof.md]
    * std::allocator[link /reference/memory/allocator.md]
    * std::shared_ptr[link /reference/memory/shared_ptr.md]
    * std::unique_ptr[link /reference/memory/unique_ptr.md]
* <memory_resource>[link /reference/memory_resource.md]
* <mutex>[link /reference/mutex.md]
    * std::lock_guard[link /reference/mutex/lock_guard.md]
    * std::unique_lock[link /reference/mutex/unique_lock.md]
    * std::mutex[link /reference/mutex/mutex.md]
* <new>[link /reference/new.md]
* <numbers>[link /reference/numbers.md]
* <numeric>[link /reference/numeric.md]
    * std::accumulate[link /reference/numeric/accumulate.md]
    * std::iota[link /reference/numeric/iota.md]
* <optional>[link /reference/optional.md]
    * std::optional[link /reference/optional/optional.md]
* <ostream>[link /reference/ostream.md]
    * std::basic_ostream[link /reference/ostream/basic_ostream.md]
    * std::endl[link /reference/ostream/endl.md]
* <print>[link /reference/print.md]
    * std::println[link /reference/print/println.md]
* <queue>[link /reference/queue.md]
* <random>[link /reference/random.md]
    * std::default_random_engine[link /reference/random/default_random_engine.md]
    * std::mt19937[link /reference/random/mt19937.md]
    * std::uniform_int_distribution[link /reference/random/uniform_int_distribution.md]
    * std::random_device[link /reference/random/random_device.md]
    * seed_gen()[link /reference/random/random_device/op_call.md]
* <ranges>[link /reference/ranges.md]
    * all_t[link /reference/ranges/all.md]
    * bidirectional_range[link /reference/ranges/bidirectional_range.md]
    * borrowed_range[link /reference/ranges/borrowed_range.md]
    * borrowed_subrange_t[link /reference/ranges/borrowed_subrange_t.md]
    * common_range[link /reference/ranges/common_range.md]
    * const_iterator_t[link /reference/ranges/const_iterator_t.md]
    * const_sentinel_t[link /reference/ranges/const_sentinel_t.md]
    * constant_range[link /reference/ranges/constant_range.md]
    * contiguous_range[link /reference/ranges/contiguous_range.md]
    * forward_range[link /reference/ranges/forward_range.md]
    * has-arrow[link /reference/ranges/has-arrow.md]
    * input_range[link /reference/ranges/input_range.md]
    * iterator_t[link /reference/ranges/iterator_t.md]
    * maybe-const[link /reference/ranges/maybe-const.md]
    * output_range[link /reference/ranges/output_range.md]
    * random_access_range[link /reference/ranges/random_access_range.md]
    * range_difference_t[link /reference/ranges/range_difference_t.md]
    * range_reference_t[link /reference/ranges/range_reference_t.md]
    * range_rvalue_reference_t[link /reference/ranges/range_rvalue_reference_t.md]
    * range_size_t[link /reference/ranges/range_size_t.md]
    * range_value_t[link /reference/ranges/range_value_t.md]
    * range-with-movable-references[link /reference/ranges/range-with-movable-references.md]
    * range[link /reference/ranges/range.md]
    * ranges::begin[link /reference/ranges/begin.md]
    * ranges::end[link /reference/ranges/end.md]
    * ranges::size[link /reference/ranges/size.md]
    * ref_view[link /reference/ranges/ref_view.md]
    * single_view[link /reference/ranges/single_view.md]
    * sentinel_t[link /reference/ranges/sentinel_t.md]
    * sized_range[link /reference/ranges/sized_range.md]
    * std::ranges::owning_view[link /reference/ranges/owning_view.md]
    * std::ranges::ref_view[link /reference/ranges/ref_view.md]
    * std::ranges::single_view[link /reference/ranges/single_view.md]
    * subrange[link /reference/ranges/subrange.md]
    * view_interface[link /reference/ranges/view_interface.md]
    * view[link /reference/ranges/view.md]
    * viewable_range[link /reference/ranges/viewable_range.md]
* <ratio>[link /reference/ratio.md]
* <rcu>[link /reference/rcu.md]
* <regex>[link /reference/regex.md]
* <scoped_allocator>[link /reference/scoped_allocator.md]
* <semaphore>[link /reference/semaphore.md]
* <set>[link /reference/set.md]
    * std::set[link /reference/set/set.md]
* <shared_mutex>[link /reference/shared_mutex.md]
* <source_location>[link /reference/source_location.md]
* <span>[link /reference/span.md]
    * std::span[link /reference/span/span.md]
    * std::dynamic_extent[link /reference/span/dynamic_extent.md]
* <sstream>[link /reference/sstream.md]
    * std::istringstream[link /reference/sstream/basic_istringstream.md]
* <stack>[link /reference/stack.md]
* <stacktrace>[link /reference/stacktrace.md]
* <stdexcept>[link /reference/stdexcept.md]
* <stdfloat>[link /reference/stdfloat.md]
    * std::bfloat16_t[link /reference/stdfloat/bfloat16_t.md]
    * std::float16_t[link /reference/stdfloat/float16_t.md]
    * std::float32_t[link /reference/stdfloat/float32_t.md]
    * std::float64_t[link /reference/stdfloat/float64_t.md]
* <stop_token>[link /reference/stop_token.md]
* <streambuf>[link /reference/streambuf.md]
* <string>[link /reference/string.md]
    * std::basic_string[link /reference/string/basic_string.md]
    * std::char_traits[link /reference/string/char_traits.md]
    * std::string[link /reference/string/basic_string.md]
    * std::u16string[link /reference/string/basic_string.md]
    * std::u32string[link /reference/string/basic_string.md]
    * std::wstring[link /reference/string/basic_string.md]
* <string_view>[link /reference/string_view.md]
    * basic_string_view[link /reference/string_view/basic_string_view.md]
    * std::basic_string_view[link /reference/string_view/basic_string_view.md]
    * std::string_view[link /reference/string_view/basic_string_view.md]
    * string_view[link /reference/string_view/basic_string_view.md]
    * sv.data()[link /reference/string_view/basic_string_view/data.md]
    * sv.size()[link /reference/string_view/basic_string_view/size.md]
* <syncstream>[link /reference/syncstream.md]
* <system_error>[link /reference/system_error.md]
    * ec.message()[link /reference/system_error/error_code/message.md]
    * std::error_code[link /reference/system_error/error_code.md]
* <thread>[link /reference/thread.md]
    * std::thread[link /reference/thread/thread.md]
    * std::jthread[link /reference/thread/jthread.md]
    * t.join()[link /reference/thread/thread/join.md]
    * t1.join()[link /reference/thread/thread/join.md]
    * t2.join()[link /reference/thread/thread/join.md]
    * t3.join()[link /reference/thread/thread/join.md]
    * std::this_thread::sleep_for[link /reference/thread/this_thread/sleep_for.md]
* <tuple>[link /reference/tuple.md]
    * std::forward_as_tuple[link /reference/tuple/forward_as_tuple.md]
    * std::tuple[link /reference/tuple/tuple.md]
    * std::tie[link /reference/tuple/tie.md]
    * tuple[link /reference/tuple/tuple.md]
* <type_traits>[link /reference/type_traits.md]
    * common_type_t[link /reference/type_traits/common_type.md]
    * common_reference_t[link /reference/type_traits/common_reference.md]
    * decay_t[link /reference/type_traits/decay.md]
    * invoke_result_t[link /reference/type_traits/invoke_result.md]
    * is_class_v[link /reference/type_traits/is_class.md]
    * is_object_v[link /reference/type_traits/is_object.md]
    * remove_cv_t[link /reference/type_traits/remove_cv.md]
    * remove_cvref_t[link /reference/type_traits/remove_cvref.md]
    * remove_reference_t[link /reference/type_traits/remove_reference.md]
    * std::common_type_t[link /reference/type_traits/common_type.md]
    * std::decay_t[link /reference/type_traits/decay.md]
    * std::false_type[link /reference/type_traits/false_type.md]
    * std::is_same_v[link /reference/type_traits/is_same.md]
    * std::is_same[link /reference/type_traits/is_same.md]
    * std::true_type[link /reference/type_traits/true_type.md]
* <typeindex>[link /reference/typeindex.md]
* <typeinfo>[link /reference/typeinfo.md]
* <unordered_map>[link /reference/unordered_map.md]
    * std::unordered_map[link /reference/unordered_map/unordered_map.md]
* <unordered_set>[link /reference/unordered_set.md]
    * std::unordered_set[link /reference/unordered_set/unordered_set.md]
* <utility>[link /reference/utility.md]
    * declval[link /reference/utility/declval.md]
    * in_place_t[link /reference/utility/in_place_t.md]
    * in_place[link /reference/utility/in_place_t.md]
    * std::exchange[link /reference/utility/exchange.md]
    * std::forward_like[link /reference/utility/forward_like.md]
    * std::forward[link /reference/utility/forward.md]
    * std::make_pair[link /reference/utility/make_pair.md]
    * std::pair[link /reference/utility/pair.md]
    * pair[link /reference/utility/pair.md]
    * piecewise_construct_t[link /reference/utility/piecewise_construct_t.md]
    * piecewise_construct[link /reference/utility/piecewise_construct_t.md]
* <valarray>[link /reference/valarray.md]
    * std::valarray[link /reference/valarray/valarray.md]
* <variant>[link /reference/variant.md]
    * std::variant[link /reference/variant/variant.md]
* <vector>[link /reference/vector.md]
    * std::vector[link /reference/vector/vector.md]
    * v.begin()[link /reference/vector/vector/begin.md]
    * v.end()[link /reference/vector/vector/end.md]
    * v.size()[link /reference/vector/vector/size.md]
    * v1.begin()[link /reference/vector/vector/begin.md]
    * v1.end()[link /reference/vector/vector/end.md]
    * v1.size()[link /reference/vector/vector/size.md]
    * v2.begin()[link /reference/vector/vector/begin.md]
    * v2.end()[link /reference/vector/vector/end.md]
    * v2.size()[link /reference/vector/vector/size.md]
    * v3.begin()[link /reference/vector/vector/begin.md]
    * v3.end()[link /reference/vector/vector/end.md]
    * v3.size()[link /reference/vector/vector/size.md]
