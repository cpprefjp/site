<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-05-20T16:00:29.071937</updated>
  <id>90aed27e-49f3-41ee-bb8f-4300796930c8</id>

  
    <entry>
      <title>clear -- fix: format</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/clear.html"/>
      <id>588262dd873ddedd784e9b27f11042090a8f21a4:reference/unordered_map/unordered_map/clear.md</id>
      <updated>2025-05-21T00:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/clear.md b/reference/unordered_map/unordered_map/clear.md
index c84f0cf83..f08c94153 100644
--- a/reference/unordered_map/unordered_map/clear.md
+++ b/reference/unordered_map/unordered_map/clear.md
@@ -48,8 +48,8 @@ s.swap(tmp);
 
 ### 計算量に関する備考
 - 多くの実装（GCC libstdc++, LLVM libc++ など）は
-  1. すべてのバケットを順に走査し
-  2. 各バケットを破棄する
+    1. すべてのバケットを順に走査し
+    2. 各バケットを破棄する
 
 という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
 これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: format</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/clear.html"/>
      <id>588262dd873ddedd784e9b27f11042090a8f21a4:reference/unordered_map/unordered_multimap/clear.md</id>
      <updated>2025-05-21T00:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/clear.md b/reference/unordered_map/unordered_multimap/clear.md
index 399652ef3..1709e5a12 100644
--- a/reference/unordered_map/unordered_multimap/clear.md
+++ b/reference/unordered_map/unordered_multimap/clear.md
@@ -48,8 +48,8 @@ s.swap(tmp);
 
 ### 計算量に関する備考
 - 多くの実装（GCC libstdc++, LLVM libc++ など）は
-  1. すべてのバケットを順に走査し
-  2. 各バケットを破棄する
+    1. すべてのバケットを順に走査し
+    2. 各バケットを破棄する
 
 という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
 これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: format</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/clear.html"/>
      <id>588262dd873ddedd784e9b27f11042090a8f21a4:reference/unordered_set/unordered_multiset/clear.md</id>
      <updated>2025-05-21T00:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/clear.md b/reference/unordered_set/unordered_multiset/clear.md
index 295b27121..6297aa4b3 100644
--- a/reference/unordered_set/unordered_multiset/clear.md
+++ b/reference/unordered_set/unordered_multiset/clear.md
@@ -48,8 +48,8 @@ s.swap(tmp);
 
 ### 計算量に関する備考
 - 多くの実装（GCC libstdc++, LLVM libc++ など）は
-  1. すべてのバケットを順に走査し
-  2. 各バケットを破棄する
+    1. すべてのバケットを順に走査し
+    2. 各バケットを破棄する
 
 という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
 これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: format</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/clear.html"/>
      <id>588262dd873ddedd784e9b27f11042090a8f21a4:reference/unordered_set/unordered_set/clear.md</id>
      <updated>2025-05-21T00:56:22+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/clear.md b/reference/unordered_set/unordered_set/clear.md
index 9e45067d9..99d4dfc32 100644
--- a/reference/unordered_set/unordered_set/clear.md
+++ b/reference/unordered_set/unordered_set/clear.md
@@ -48,8 +48,8 @@ s.swap(tmp);
 
 ### 計算量に関する備考
 - 多くの実装（GCC libstdc++, LLVM libc++ など）は
-  1. すべてのバケットを順に走査し
-  2. 各バケットを破棄する
+    1. すべてのバケットを順に走査し
+    2. 各バケットを破棄する
 
 という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
 これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: reflect issue conversation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/clear.html"/>
      <id>26ded1a892908b4b1afc182aa7bd669ed1d2a03f:reference/unordered_map/unordered_map/clear.md</id>
      <updated>2025-05-21T00:54:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/clear.md b/reference/unordered_map/unordered_map/clear.md
index 92bc6159b..c84f0cf83 100644
--- a/reference/unordered_map/unordered_map/clear.md
+++ b/reference/unordered_map/unordered_map/clear.md
@@ -33,8 +33,26 @@ void clear() noexcept;
 投げない。
 
 
+## 備考
+- clear() は バケット数([`bucket_count`](bucket_count.md)`()`)を縮小することを規格上は要求していない。
+実装によっては clear 後もバケット配列が温存され、動的メモリが残る場合がある。
+- メモリを確実に解放したいときには以下のように操作を行う
+```CPP
+std::unordered_map&amp;lt;std::string, int&amp;gt; tmp;
+s.swap(tmp);
+```
+
+
 ## 計算量
-本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+
+### 計算量に関する備考
+- 多くの実装（GCC libstdc++, LLVM libc++ など）は
+  1. すべてのバケットを順に走査し
+  2. 各バケットを破棄する
+
+という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
+これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: reflect issue conversation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/clear.html"/>
      <id>26ded1a892908b4b1afc182aa7bd669ed1d2a03f:reference/unordered_map/unordered_multimap/clear.md</id>
      <updated>2025-05-21T00:54:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/clear.md b/reference/unordered_map/unordered_multimap/clear.md
index cd593049e..399652ef3 100644
--- a/reference/unordered_map/unordered_multimap/clear.md
+++ b/reference/unordered_map/unordered_multimap/clear.md
@@ -33,8 +33,26 @@ void clear() noexcept;
 投げない。
 
 
+## 備考
+- clear() は バケット数([`bucket_count`](bucket_count.md)`()`)を縮小することを規格上は要求していない。
+実装によっては clear 後もバケット配列が温存され、動的メモリが残る場合がある。
+- メモリを確実に解放したいときには以下のように操作を行う
+```CPP
+std::unordered_multimap&amp;lt;std::string, int&amp;gt; tmp;
+s.swap(tmp);
+```
+
+
 ## 計算量
-本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+
+### 計算量に関する備考
+- 多くの実装（GCC libstdc++, LLVM libc++ など）は
+  1. すべてのバケットを順に走査し
+  2. 各バケットを破棄する
+
+という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
+これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: reflect issue conversation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/clear.html"/>
      <id>26ded1a892908b4b1afc182aa7bd669ed1d2a03f:reference/unordered_set/unordered_multiset/clear.md</id>
      <updated>2025-05-21T00:54:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/clear.md b/reference/unordered_set/unordered_multiset/clear.md
index ed4129e92..295b27121 100644
--- a/reference/unordered_set/unordered_multiset/clear.md
+++ b/reference/unordered_set/unordered_multiset/clear.md
@@ -33,8 +33,26 @@ void clear() noexcept;
 投げない。
 
 
+## 備考
+- clear() は バケット数([`bucket_count`](bucket_count.md)`()`)を縮小することを規格上は要求していない。
+実装によっては clear 後もバケット配列が温存され、動的メモリが残る場合がある。
+- メモリを確実に解放したいときには以下のように操作を行う
+```CPP
+std::unordered_multiset&amp;lt;int&amp;gt; tmp;
+s.swap(tmp);
+```
+
+
 ## 計算量
-本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+
+### 計算量に関する備考
+- 多くの実装（GCC libstdc++, LLVM libc++ など）は
+  1. すべてのバケットを順に走査し
+  2. 各バケットを破棄する
+
+という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
+これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: reflect issue conversation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/clear.html"/>
      <id>26ded1a892908b4b1afc182aa7bd669ed1d2a03f:reference/unordered_set/unordered_set/clear.md</id>
      <updated>2025-05-21T00:54:16+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/clear.md b/reference/unordered_set/unordered_set/clear.md
index 0062e4a92..9e45067d9 100644
--- a/reference/unordered_set/unordered_set/clear.md
+++ b/reference/unordered_set/unordered_set/clear.md
@@ -33,8 +33,26 @@ void clear() noexcept;
 投げない。
 
 
+## 備考
+- clear() は バケット数([`bucket_count`](bucket_count.md)`()`)を縮小することを規格上は要求していない。
+実装によっては clear 後もバケット配列が温存され、動的メモリが残る場合がある。
+- メモリを確実に解放したいときには以下のように操作を行う
+```CPP
+std::unordered_set&amp;lt;int&amp;gt; tmp;
+s.swap(tmp);
+```
+
+
 ## 計算量
-本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+
+### 計算量に関する備考
+- 多くの実装（GCC libstdc++, LLVM libc++ など）は
+  1. すべてのバケットを順に走査し
+  2. 各バケットを破棄する
+
+という手順を取るため、実行時間は概ね [`bucket_count`](bucket_count.md)`()` + [`size`](size.md)`()`  に比例 する傾向がある。
+これは規格が定義する「計算量」（オブジェクトに対する操作の数）とは別物である。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: explanation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/clear.html"/>
      <id>056967cba35edd35031492137dd1c1d43e008bc8:reference/unordered_map/unordered_map/clear.md</id>
      <updated>2025-05-18T16:20:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/clear.md b/reference/unordered_map/unordered_map/clear.md
index fd12bdc0e..92bc6159b 100644
--- a/reference/unordered_map/unordered_map/clear.md
+++ b/reference/unordered_map/unordered_map/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: explanation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/clear.html"/>
      <id>056967cba35edd35031492137dd1c1d43e008bc8:reference/unordered_map/unordered_multimap/clear.md</id>
      <updated>2025-05-18T16:20:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/clear.md b/reference/unordered_map/unordered_multimap/clear.md
index a1f76170c..cd593049e 100644
--- a/reference/unordered_map/unordered_multimap/clear.md
+++ b/reference/unordered_map/unordered_multimap/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: explanation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/clear.html"/>
      <id>056967cba35edd35031492137dd1c1d43e008bc8:reference/unordered_set/unordered_multiset/clear.md</id>
      <updated>2025-05-18T16:20:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/clear.md b/reference/unordered_set/unordered_multiset/clear.md
index f2fd9a782..ed4129e92 100644
--- a/reference/unordered_set/unordered_multiset/clear.md
+++ b/reference/unordered_set/unordered_multiset/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix: explanation</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/clear.html"/>
      <id>056967cba35edd35031492137dd1c1d43e008bc8:reference/unordered_set/unordered_set/clear.md</id>
      <updated>2025-05-18T16:20:42+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/clear.md b/reference/unordered_set/unordered_set/clear.md
index b6394e9f7..0062e4a92 100644
--- a/reference/unordered_set/unordered_set/clear.md
+++ b/reference/unordered_set/unordered_set/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
+本関数呼び出し前のバケット数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix complexity of clear method</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_map/clear.html"/>
      <id>8e136851714ae262cd98b11b1a35b41622527a9e:reference/unordered_map/unordered_map/clear.md</id>
      <updated>2025-05-18T16:13:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_map/clear.md b/reference/unordered_map/unordered_map/clear.md
index 1d0ce4f0c..fd12bdc0e 100644
--- a/reference/unordered_map/unordered_map/clear.md
+++ b/reference/unordered_map/unordered_map/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix complexity of clear method</title>
      <link href="https://cpprefjp.github.io/reference/unordered_map/unordered_multimap/clear.html"/>
      <id>8e136851714ae262cd98b11b1a35b41622527a9e:reference/unordered_map/unordered_multimap/clear.md</id>
      <updated>2025-05-18T16:13:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_map/unordered_multimap/clear.md b/reference/unordered_map/unordered_multimap/clear.md
index e4d252581..a1f76170c 100644
--- a/reference/unordered_map/unordered_multimap/clear.md
+++ b/reference/unordered_map/unordered_multimap/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix complexity of clear method</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_multiset/clear.html"/>
      <id>8e136851714ae262cd98b11b1a35b41622527a9e:reference/unordered_set/unordered_multiset/clear.md</id>
      <updated>2025-05-18T16:13:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_multiset/clear.md b/reference/unordered_set/unordered_multiset/clear.md
index 8ba2f6e24..f2fd9a782 100644
--- a/reference/unordered_set/unordered_multiset/clear.md
+++ b/reference/unordered_set/unordered_multiset/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clear -- fix complexity of clear method</title>
      <link href="https://cpprefjp.github.io/reference/unordered_set/unordered_set/clear.html"/>
      <id>8e136851714ae262cd98b11b1a35b41622527a9e:reference/unordered_set/unordered_set/clear.md</id>
      <updated>2025-05-18T16:13:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/unordered_set/unordered_set/clear.md b/reference/unordered_set/unordered_set/clear.md
index e54f8a9f4..b6394e9f7 100644
--- a/reference/unordered_set/unordered_set/clear.md
+++ b/reference/unordered_set/unordered_set/clear.md
@@ -34,7 +34,7 @@ void clear() noexcept;
 
 
 ## 計算量
-本関数呼び出し前のコンテナの要素数（[`size`](size.md)`()`）に比例
+本関数呼び出し前のコンテナの要素数（[`bucket_count`](bucket_count.md)`()`）に比例
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>koki watanabe</name>
        <email>address8128@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>try_emplace -- map::try_emplace : 要件を修正 #1189</title>
      <link href="https://cpprefjp.github.io/reference/map/map/try_emplace.html"/>
      <id>3175722cafabd80cce386bdfb2de0656b1ac46b8:reference/map/map/try_emplace.md</id>
      <updated>2025-05-18T14:59:17+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/map/map/try_emplace.md b/reference/map/map/try_emplace.md
index 7bb94f5dd..498af971b 100644
--- a/reference/map/map/try_emplace.md
+++ b/reference/map/map/try_emplace.md
@@ -55,16 +55,19 @@ iterator
 
 
 ## テンプレートパラメータ制約
-- (1)、(3)、(5) : `value_type` は、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(k)`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から `map` に直接構築可能であること
-- (2)、(4)、(6) : `value_type` は、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`move`](/reference/utility/move.md)`(k))`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から `map` に直接構築可能であること
+- (1)、(3)、(5)、(6) : `value_type` は、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(k)`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から `map` に直接構築可能であること
+- (2)、(4) : `value_type` は、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`move`](/reference/utility/move.md)`(k))`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から `map` に直接構築可能であること
 - (5), (6) : `key_compare::is_transparent` が妥当な式であること
+- (5) : 以下のすべてを満たすこと：
+    - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;K&amp;amp;&amp;amp;, const_iterator&amp;gt; == false`
+    - [`is_convertible_v`](/reference/type_traits/is_convertible.md)`&amp;lt;K&amp;amp;&amp;amp;, iterator&amp;gt; == false`
 
 なお、規格に記載はないが、`hint` は [`emplace_hint`](emplace_hint.md) と同様、コンテナの有効な読み取り専用イテレータである必要があるものと思われる。
 
 
 ## 効果
-- (1)、(3)、(5) : `map` が `k` と同値のキーを持つ要素を持っている場合、何もしない（引数への副作用もない）。そうでなければ、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(k)`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から構築した `value_type` 型のオブジェクトを挿入する。
-- (2)、(4)、(6) : `map` が `k` と同値のキーを持つ要素を持っている場合、何もしない（引数への副作用もない）。そうでなければ、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`move`](/reference/utility/move.md)`(k))`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から構築した `value_type` 型のオブジェクトを挿入する。
+- (1)、(3)、(5)、(6) : `map` が `k` と同値のキーを持つ要素を持っている場合、何もしない（引数への副作用もない）。そうでなければ、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(k)`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から構築した `value_type` 型のオブジェクトを挿入する。
+- (2)、(4) : `map` が `k` と同値のキーを持つ要素を持っている場合、何もしない（引数への副作用もない）。そうでなければ、[`piecewise_construct`](/reference/utility/piecewise_construct_t.md), [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`move`](/reference/utility/move.md)`(k))`, [`forward_as_tuple`](/reference/tuple/forward_as_tuple.md)`(`[`forward`](/reference/utility/forward.md)`&amp;lt;Args&amp;gt;(args)...)` から構築した `value_type` 型のオブジェクトを挿入する。
 
 
 ## 戻り値
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
</feed>