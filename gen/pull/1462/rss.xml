<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-07T15:48:29.227860</updated>
  <id>92c0a8a1-d310-422f-8931-2b0a36f33e06</id>

  
    <entry>
      <title>for_each -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/for_each.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/for_each.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/for_each.md b/reference/algorithm/for_each.md
index 6e9f71ed1..1dace0823 100644
--- a/reference/algorithm/for_each.md
+++ b/reference/algorithm/for_each.md
@@ -89,11 +89,6 @@ int main() {
 }
 ```
 * std::for_each[color ff0000]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
 * v.push_back[link /reference/vector/vector/push_back.md]
 
 #### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/generate.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/generate.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/generate.md b/reference/algorithm/generate.md
index 685d60e44..17aacb71a 100644
--- a/reference/algorithm/generate.md
+++ b/reference/algorithm/generate.md
@@ -56,11 +56,6 @@ int main() {
 }
 ```
 * std::generate[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate_n -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/generate_n.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/generate_n.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/generate_n.md b/reference/algorithm/generate_n.md
index 0c8d32cbe..a858e03a9 100644
--- a/reference/algorithm/generate_n.md
+++ b/reference/algorithm/generate_n.md
@@ -75,8 +75,6 @@ int main() {
 }
 ```
 * std::generate_n[color ff0000]
-* std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
-* std::cout[link /reference/iostream/cout.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>includes -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/includes.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/includes.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/includes.md b/reference/algorithm/includes.md
index 361793a02..82b393e2c 100644
--- a/reference/algorithm/includes.md
+++ b/reference/algorithm/includes.md
@@ -82,12 +82,8 @@ int main()
 }
 ```
 * std::includes[color ff0000]
-* std::set[link /reference/set/set.md]
 * begin()[link /reference/set/set/begin.md]
 * end()[link /reference/set/set/end.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inplace_merge -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/inplace_merge.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/inplace_merge.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/inplace_merge.md b/reference/algorithm/inplace_merge.md
index 2edfe703e..2af32581f 100644
--- a/reference/algorithm/inplace_merge.md
+++ b/reference/algorithm/inplace_merge.md
@@ -93,12 +93,6 @@ int main()
 }
 ```
 * std::inplace_merge[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_permutation -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/is_permutation.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/is_permutation.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/is_permutation.md b/reference/algorithm/is_permutation.md
index a7f9947a0..cf90f1f46 100644
--- a/reference/algorithm/is_permutation.md
+++ b/reference/algorithm/is_permutation.md
@@ -96,14 +96,8 @@ int main ()
 }
 ```
 * std::is_permutation[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin()[link /reference/vector/vector/begin.md]
-* v.end()[link /reference/vector/vector/end.md]
 * good.begin()[link /reference/vector/vector/begin.md]
 * bad.begin()[link /reference/vector/vector/begin.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_sorted -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/is_sorted.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/is_sorted.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/is_sorted.md b/reference/algorithm/is_sorted.md
index b0a3a318d..f0c2de657 100644
--- a/reference/algorithm/is_sorted.md
+++ b/reference/algorithm/is_sorted.md
@@ -64,13 +64,6 @@ int main()
 }
 ```
 * std::is_sorted[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* std::endl[link /reference/ostream/endl.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::sort[link sort.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_sorted_until -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/is_sorted_until.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/is_sorted_until.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/is_sorted_until.md b/reference/algorithm/is_sorted_until.md
index b60924a49..621f615d0 100644
--- a/reference/algorithm/is_sorted_until.md
+++ b/reference/algorithm/is_sorted_until.md
@@ -76,13 +76,6 @@ int main()
 }
 ```
 * std::is_sorted_until[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* std::sort[link sort.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/iter_swap.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/iter_swap.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/iter_swap.md b/reference/algorithm/iter_swap.md
index d0f70af2a..85f8cc585 100644
--- a/reference/algorithm/iter_swap.md
+++ b/reference/algorithm/iter_swap.md
@@ -57,14 +57,6 @@ int main() {
 }
 ```
 * std::iter_swap[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v1.begin[link /reference/vector/vector/begin.md]
-* v1.end[link /reference/vector/vector/end.md]
-* v2.begin[link /reference/vector/vector/begin.md]
-* v2.end[link /reference/vector/vector/end.md]
-* std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 ### 出力
 ```
 v1: 3,5,4,
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lexicographical_compare -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lexicographical_compare.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/lexicographical_compare.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lexicographical_compare.md b/reference/algorithm/lexicographical_compare.md
index b578892c0..b486aed5d 100644
--- a/reference/algorithm/lexicographical_compare.md
+++ b/reference/algorithm/lexicographical_compare.md
@@ -137,9 +137,6 @@ int main()
 * begin()[link /reference/string/basic_string/begin.md]
 * end()[link /reference/string/basic_string/end.md]
 * std::greater[link /reference/functional/greater.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::string[link /reference/string/string.md.nolink]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lexicographical_compare_three_way -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lexicographical_compare_three_way.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/lexicographical_compare_three_way.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lexicographical_compare_three_way.md b/reference/algorithm/lexicographical_compare_three_way.md
index 690959da1..ef013d162 100644
--- a/reference/algorithm/lexicographical_compare_three_way.md
+++ b/reference/algorithm/lexicographical_compare_three_way.md
@@ -115,11 +115,6 @@ int main() {
 }
 ```
 * std::lexicographical_compare_three_way[color ff0000]
-* std::string[link /reference/string/string.md.nolink]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::isalpha[link /reference/cctype/isalpha.md]
-* std::tolower[link /reference/cctype/tolower.md]
 * weak_ordering[link /reference/compare/weak_ordering.md]
 * str1.begin[link /reference/string/string/begin.md.nolink]
 * str1.end[link /reference/string/string/end.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lower_bound -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lower_bound.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/lower_bound.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lower_bound.md b/reference/algorithm/lower_bound.md
index 129c38ab9..7b3b2e2f0 100644
--- a/reference/algorithm/lower_bound.md
+++ b/reference/algorithm/lower_bound.md
@@ -176,15 +176,6 @@ int main()
 }
 ```
 * std::lower_bound[color ff0000]
-* std::string[link /reference/string/string.md.nolink]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::size_t[link /reference/cstddef/size_t.md]
-* std::distance[link /reference/iterator/distance.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::sort[link sort.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_heap -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/make_heap.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/make_heap.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/make_heap.md b/reference/algorithm/make_heap.md
index ad9e9a8be..e634913a1 100644
--- a/reference/algorithm/make_heap.md
+++ b/reference/algorithm/make_heap.md
@@ -64,10 +64,6 @@ int main()
 }
 ```
 * std::make_heap[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/max.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/max.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/max.md b/reference/algorithm/max.md
index cc0846b8c..af1a6eb46 100644
--- a/reference/algorithm/max.md
+++ b/reference/algorithm/max.md
@@ -75,7 +75,6 @@ int main()
 ```
 * std::max[color ff0000]
 * std::greater[link /reference/functional/greater.md]
-* assert[link /reference/cassert/assert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_element -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/max_element.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/max_element.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/max_element.md b/reference/algorithm/max_element.md
index 1655be9b8..5b042cb16 100644
--- a/reference/algorithm/max_element.md
+++ b/reference/algorithm/max_element.md
@@ -71,13 +71,6 @@ int main()
 }
 ```
 * std::max_element[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::pair[link /reference/utility/pair.md]
-* v1.begin[link /reference/vector/vector/begin.md]
-* v1.end[link /reference/vector/vector/end.md]
-* v2.begin[link /reference/vector/vector/begin.md]
-* v2.end[link /reference/vector/vector/end.md]
-* assert[link /reference/cassert/assert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/merge.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/merge.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/merge.md b/reference/algorithm/merge.md
index f7a5db5f9..933045f7b 100644
--- a/reference/algorithm/merge.md
+++ b/reference/algorithm/merge.md
@@ -126,10 +126,6 @@ int main()
 * b.end()[link /reference/vector/vector/end.md]
 * result.begin()[link /reference/vector/vector/begin.md]
 * result.end()[link /reference/vector/vector/end.md]
-* std::back_inserter[link /reference/iterator/back_inserter.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::for_each[link /reference/algorithm/for_each.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/min.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/min.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/min.md b/reference/algorithm/min.md
index e129af295..ed6e1e667 100644
--- a/reference/algorithm/min.md
+++ b/reference/algorithm/min.md
@@ -75,7 +75,6 @@ int main()
 ```
 * std::min[color ff0000]
 * std::greater[link /reference/functional/greater.md]
-* assert[link /reference/cassert/assert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min_element -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/min_element.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/min_element.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/min_element.md b/reference/algorithm/min_element.md
index 84c132997..9f6e9e215 100644
--- a/reference/algorithm/min_element.md
+++ b/reference/algorithm/min_element.md
@@ -70,13 +70,6 @@ int main()
 }
 ```
 * std::min_element[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v1.begin[link /reference/vector/vector/begin.md]
-* v1.end[link /reference/vector/vector/end.md]
-* v2.begin[link /reference/vector/vector/begin.md]
-* v2.end[link /reference/vector/vector/end.md]
-* std::pair[link /reference/utility/pair.md]
-* assert[link /reference/cassert/assert.md]
 * v2_min_element-&amp;gt;first[link /reference/utility/pair/first.md.nolink]
 * v2_min_element-&amp;gt;second[link /reference/utility/pair/second.md.nolink]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>minmax -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/minmax.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/minmax.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/minmax.md b/reference/algorithm/minmax.md
index 9423d3628..d108dea3b 100644
--- a/reference/algorithm/minmax.md
+++ b/reference/algorithm/minmax.md
@@ -95,8 +95,6 @@ int main()
 ```
 * std::minmax[color ff0000]
 * std::greater[link /reference/functional/greater.md]
-* std::pair[link /reference/utility/pair.md]
-* assert[link /reference/cassert/assert.md]
 * result1.first[link /reference/utility/pair/first.md.nolink]
 * result1.second[link /reference/utility/pair/second.md.nolink]
 * result2.first[link /reference/utility/pair/first.md.nolink]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>minmax_element -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/minmax_element.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/minmax_element.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/minmax_element.md b/reference/algorithm/minmax_element.md
index 270cc1e73..8a63e1100 100644
--- a/reference/algorithm/minmax_element.md
+++ b/reference/algorithm/minmax_element.md
@@ -78,14 +78,10 @@ int main()
 }
 ```
 * std::minmax_element[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
 * *i.first[link /reference/utility/pair/first.md.nolink]
 * *i.second[link /reference/utility/pair/second.md.nolink]
 * *j.first[link /reference/utility/pair/first.md.nolink]
 * *j.second[link /reference/utility/pair/second.md.nolink]
-* assert[link /reference/cassert/assert.md]
 ### 出力
 ```
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mismatch -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/mismatch.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/mismatch.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/mismatch.md b/reference/algorithm/mismatch.md
index fbe48ea0c..e31d99633 100644
--- a/reference/algorithm/mismatch.md
+++ b/reference/algorithm/mismatch.md
@@ -146,18 +146,8 @@ int main() {
 ```
 * std::mismatch[color ff0000]
 * std::to_string[link /reference/string/to_string.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 * *p.first[link /reference/utility/pair/first.md.nolink]
 * *p.second[link /reference/utility/pair/second.md.nolink]
-* std::vector[link /reference/vector/vector.md]
-* std::array[link /reference/array/array.md]
-* std::list[link /reference/list/list.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* v2.begin[link /reference/array/array/begin.md]
-* v3.begin[link /reference/list/list/begin.md]
-* v3.end[link /reference/list/list/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/move.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/move.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/move.md b/reference/algorithm/move.md
index 6100e3081..5449dfe49 100644
--- a/reference/algorithm/move.md
+++ b/reference/algorithm/move.md
@@ -73,17 +73,7 @@ int main() {
 ```
 * std::move[color ff0000]
 * v.emplace_back[link /reference/vector/vector/emplace_back.md]
-* std::vector[link /reference/vector/vector.md]
-* std::unique_ptr[link /reference/memory/unique_ptr.md]
-* std::back_inserter[link /reference/iterator/back_inserter.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::for_each[link /reference/algorithm/for_each.md]
 * v.emplace_back[link /reference/vector/vector/emplace_back.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* v2.begin[link /reference/vector/vector/begin.md]
-* v2.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_backward -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/move_backward.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/move_backward.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/move_backward.md b/reference/algorithm/move_backward.md
index 450ba5552..460289ed1 100644
--- a/reference/algorithm/move_backward.md
+++ b/reference/algorithm/move_backward.md
@@ -77,10 +77,6 @@ int main() {
 * std::move_backward[color ff0000]
 * v.emplace_back[link /reference/vector/vector/emplace_back.md]
 * std::move[link move.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::unique_ptr[link /reference/memory/unique_ptr.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>next_permutation -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/next_permutation.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/next_permutation.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/next_permutation.md b/reference/algorithm/next_permutation.md
index d686d3156..016788587 100644
--- a/reference/algorithm/next_permutation.md
+++ b/reference/algorithm/next_permutation.md
@@ -81,12 +81,6 @@ int main ()
 }
 ```
 * std::next_permutation[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>none_of -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/none_of.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/none_of.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/none_of.md b/reference/algorithm/none_of.md
index 5de0d5853..77520c8ad 100644
--- a/reference/algorithm/none_of.md
+++ b/reference/algorithm/none_of.md
@@ -68,12 +68,6 @@ int main() {
 }
 ```
 * std::none_of[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nth_element -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/nth_element.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/nth_element.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/nth_element.md b/reference/algorithm/nth_element.md
index 8e01a8e68..6c8890ac7 100644
--- a/reference/algorithm/nth_element.md
+++ b/reference/algorithm/nth_element.md
@@ -86,12 +86,6 @@ int main()
 }
 ```
 * std::nth_element[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partial_sort -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partial_sort.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/partial_sort.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partial_sort.md b/reference/algorithm/partial_sort.md
index 6dfb6c1ba..4c0d67336 100644
--- a/reference/algorithm/partial_sort.md
+++ b/reference/algorithm/partial_sort.md
@@ -85,12 +85,6 @@ int main()
 }
 ```
 * std::partial_sort[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partial_sort_copy -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partial_sort_copy.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/partial_sort_copy.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partial_sort_copy.md b/reference/algorithm/partial_sort_copy.md
index 84978e812..f70f56d01 100644
--- a/reference/algorithm/partial_sort_copy.md
+++ b/reference/algorithm/partial_sort_copy.md
@@ -97,12 +97,6 @@ int main()
 * std::partial_sort_copy[color ff0000]
 * result.begin()[link /reference/vector/vector/begin.md]
 * result.end()[link /reference/vector/vector/end.md]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partition.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/partition.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partition.md b/reference/algorithm/partition.md
index fd4bc8dd0..452a9625b 100644
--- a/reference/algorithm/partition.md
+++ b/reference/algorithm/partition.md
@@ -82,12 +82,6 @@ int main()
 }
 ```
 * std::partition[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition_copy -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partition_copy.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/partition_copy.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partition_copy.md b/reference/algorithm/partition_copy.md
index 184cdc8d7..399627dcd 100644
--- a/reference/algorithm/partition_copy.md
+++ b/reference/algorithm/partition_copy.md
@@ -106,14 +106,6 @@ int main()
 }
 ```
 * std::partition_copy[color ff0000]
-* std::string[link /reference/string/string.md.nolink]
-* std::vector[link /reference/vector/vector.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::back_inserter[link /reference/iterator/back_inserter.md]
 * is_even[link /reference/algorithm/is_partitioned.md]
 
 ### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prev_permutation -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/prev_permutation.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/prev_permutation.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/prev_permutation.md b/reference/algorithm/prev_permutation.md
index aeb7a783b..3af16602f 100644
--- a/reference/algorithm/prev_permutation.md
+++ b/reference/algorithm/prev_permutation.md
@@ -76,12 +76,6 @@ int main ()
 }
 ```
 * std::prev_permutation[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::for_each[link /reference/algorithm/for_each.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>random_shuffle -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/random_shuffle.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/random_shuffle.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/random_shuffle.md b/reference/algorithm/random_shuffle.md
index 41ab8bbe2..fc8e3c332 100644
--- a/reference/algorithm/random_shuffle.md
+++ b/reference/algorithm/random_shuffle.md
@@ -85,14 +85,6 @@ int main() {
 }
 ```
 * std::random_shuffle[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::iota[link /reference/numeric/iota.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
-* std::copy[link /reference/algorithm/copy.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>adjacent_find -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_adjacent_find.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/ranges_adjacent_find.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_adjacent_find.md b/reference/algorithm/ranges_adjacent_find.md
index 171fbcaa3..4685f276c 100644
--- a/reference/algorithm/ranges_adjacent_find.md
+++ b/reference/algorithm/ranges_adjacent_find.md
@@ -82,12 +82,6 @@ int main() {
 ```
 * std::ranges::distance[link /reference/iterator/ranges_distance.md]
 * std::ranges::adjacent_find[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* v.begin[link /reference/vector/vector/begin.md]
-* v.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all_of -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_all_of.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/ranges_all_of.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_all_of.md b/reference/algorithm/ranges_all_of.md
index 79b2ed26e..09cb6a9a9 100644
--- a/reference/algorithm/ranges_all_of.md
+++ b/reference/algorithm/ranges_all_of.md
@@ -63,10 +63,6 @@ int main() {
 }
 ```
 * std::ranges::all_of[color ff0000]
-* std::array[link /reference/array/array.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>any_of -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_any_of.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/ranges_any_of.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_any_of.md b/reference/algorithm/ranges_any_of.md
index 0d12fc585..77e2ffd1e 100644
--- a/reference/algorithm/ranges_any_of.md
+++ b/reference/algorithm/ranges_any_of.md
@@ -65,10 +65,6 @@ int main() {
 }
 ```
 * std::ranges::any_of[color ff0000]
-* std::array[link /reference/array/array.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
-* std::boolalpha[link /reference/ios/boolalpha.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>binary_search -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_binary_search.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/ranges_binary_search.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_binary_search.md b/reference/algorithm/ranges_binary_search.md
index 30448aa3d..a0c9bd581 100644
--- a/reference/algorithm/ranges_binary_search.md
+++ b/reference/algorithm/ranges_binary_search.md
@@ -118,9 +118,6 @@ int main()
 }
 ```
 * std::ranges::binary_search[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clamp -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_clamp.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/ranges_clamp.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_clamp.md b/reference/algorithm/ranges_clamp.md
index af760c787..489120d53 100644
--- a/reference/algorithm/ranges_clamp.md
+++ b/reference/algorithm/ranges_clamp.md
@@ -44,8 +44,6 @@ int main()
 }
 ```
 * std::ranges::clamp[color ff0000]
-* std::cout[link /reference/iostream/cout.md]
-* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains_subrange -- more コード修飾の重複登録を削除</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_contains_subrange.html"/>
      <id>70f98cd6aed5f17d524dae0104f86a0394c68056:reference/algorithm/ranges_contains_subrange.md</id>
      <updated>2025-07-08T00:05:32+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_contains_subrange.md b/reference/algorithm/ranges_contains_subrange.md
index 17167aaf1..cdd3ae99c 100644
--- a/reference/algorithm/ranges_contains_subrange.md
+++ b/reference/algorithm/ranges_contains_subrange.md
@@ -58,9 +58,6 @@ int main() {
 }
 ```
 * std::ranges::contains_subrange[color ff0000]
-* std::vector[link /reference/vector/vector.md]
-* std::list[link /reference/list/list.md]
-* std::println[link /reference/print/println.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>for_each -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/for_each.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/for_each.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/for_each.md b/reference/algorithm/for_each.md
index 1dace0823..6e9f71ed1 100644
--- a/reference/algorithm/for_each.md
+++ b/reference/algorithm/for_each.md
@@ -89,6 +89,11 @@ int main() {
 }
 ```
 * std::for_each[color ff0000]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
 * v.push_back[link /reference/vector/vector/push_back.md]
 
 #### 出力
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/generate.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/generate.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/generate.md b/reference/algorithm/generate.md
index 17aacb71a..685d60e44 100644
--- a/reference/algorithm/generate.md
+++ b/reference/algorithm/generate.md
@@ -56,6 +56,11 @@ int main() {
 }
 ```
 * std::generate[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>generate_n -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/generate_n.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/generate_n.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/generate_n.md b/reference/algorithm/generate_n.md
index a858e03a9..0c8d32cbe 100644
--- a/reference/algorithm/generate_n.md
+++ b/reference/algorithm/generate_n.md
@@ -75,6 +75,8 @@ int main() {
 }
 ```
 * std::generate_n[color ff0000]
+* std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
+* std::cout[link /reference/iostream/cout.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>includes -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/includes.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/includes.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/includes.md b/reference/algorithm/includes.md
index 82b393e2c..361793a02 100644
--- a/reference/algorithm/includes.md
+++ b/reference/algorithm/includes.md
@@ -82,8 +82,12 @@ int main()
 }
 ```
 * std::includes[color ff0000]
+* std::set[link /reference/set/set.md]
 * begin()[link /reference/set/set/begin.md]
 * end()[link /reference/set/set/end.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>inplace_merge -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/inplace_merge.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/inplace_merge.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/inplace_merge.md b/reference/algorithm/inplace_merge.md
index 2af32581f..2edfe703e 100644
--- a/reference/algorithm/inplace_merge.md
+++ b/reference/algorithm/inplace_merge.md
@@ -93,6 +93,12 @@ int main()
 }
 ```
 * std::inplace_merge[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_permutation -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/is_permutation.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/is_permutation.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/is_permutation.md b/reference/algorithm/is_permutation.md
index cf90f1f46..a7f9947a0 100644
--- a/reference/algorithm/is_permutation.md
+++ b/reference/algorithm/is_permutation.md
@@ -96,8 +96,14 @@ int main ()
 }
 ```
 * std::is_permutation[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin()[link /reference/vector/vector/begin.md]
+* v.end()[link /reference/vector/vector/end.md]
 * good.begin()[link /reference/vector/vector/begin.md]
 * bad.begin()[link /reference/vector/vector/begin.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_sorted -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/is_sorted.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/is_sorted.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/is_sorted.md b/reference/algorithm/is_sorted.md
index f0c2de657..b0a3a318d 100644
--- a/reference/algorithm/is_sorted.md
+++ b/reference/algorithm/is_sorted.md
@@ -64,6 +64,13 @@ int main()
 }
 ```
 * std::is_sorted[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* std::endl[link /reference/ostream/endl.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::sort[link sort.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_sorted_until -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/is_sorted_until.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/is_sorted_until.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/is_sorted_until.md b/reference/algorithm/is_sorted_until.md
index 621f615d0..b60924a49 100644
--- a/reference/algorithm/is_sorted_until.md
+++ b/reference/algorithm/is_sorted_until.md
@@ -76,6 +76,13 @@ int main()
 }
 ```
 * std::is_sorted_until[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* std::sort[link sort.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>iter_swap -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/iter_swap.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/iter_swap.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/iter_swap.md b/reference/algorithm/iter_swap.md
index aa599262d..d0f70af2a 100644
--- a/reference/algorithm/iter_swap.md
+++ b/reference/algorithm/iter_swap.md
@@ -57,7 +57,14 @@ int main() {
 }
 ```
 * std::iter_swap[color ff0000]
-
+* std::vector[link /reference/vector/vector.md]
+* v1.begin[link /reference/vector/vector/begin.md]
+* v1.end[link /reference/vector/vector/end.md]
+* v2.begin[link /reference/vector/vector/begin.md]
+* v2.end[link /reference/vector/vector/end.md]
+* std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 ### 出力
 ```
 v1: 3,5,4,
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lexicographical_compare -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lexicographical_compare.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/lexicographical_compare.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lexicographical_compare.md b/reference/algorithm/lexicographical_compare.md
index b486aed5d..b578892c0 100644
--- a/reference/algorithm/lexicographical_compare.md
+++ b/reference/algorithm/lexicographical_compare.md
@@ -137,6 +137,9 @@ int main()
 * begin()[link /reference/string/basic_string/begin.md]
 * end()[link /reference/string/basic_string/end.md]
 * std::greater[link /reference/functional/greater.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::string[link /reference/string/string.md.nolink]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lexicographical_compare_three_way -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lexicographical_compare_three_way.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/lexicographical_compare_three_way.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lexicographical_compare_three_way.md b/reference/algorithm/lexicographical_compare_three_way.md
index caf3b5a09..690959da1 100644
--- a/reference/algorithm/lexicographical_compare_three_way.md
+++ b/reference/algorithm/lexicographical_compare_three_way.md
@@ -114,7 +114,19 @@ int main() {
   }
 }
 ```
+* std::lexicographical_compare_three_way[color ff0000]
+* std::string[link /reference/string/string.md.nolink]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::isalpha[link /reference/cctype/isalpha.md]
+* std::tolower[link /reference/cctype/tolower.md]
 * weak_ordering[link /reference/compare/weak_ordering.md]
+* str1.begin[link /reference/string/string/begin.md.nolink]
+* str1.end[link /reference/string/string/end.md.nolink]
+* str2.begin[link /reference/string/string/begin.md.nolink]
+* str2.end[link /reference/string/string/end.md.nolink]
+* str3.begin[link /reference/string/string/begin.md.nolink]
+* str3.end[link /reference/string/string/end.md.nolink]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>lower_bound -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/lower_bound.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/lower_bound.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/lower_bound.md b/reference/algorithm/lower_bound.md
index 7b3b2e2f0..129c38ab9 100644
--- a/reference/algorithm/lower_bound.md
+++ b/reference/algorithm/lower_bound.md
@@ -176,6 +176,15 @@ int main()
 }
 ```
 * std::lower_bound[color ff0000]
+* std::string[link /reference/string/string.md.nolink]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::size_t[link /reference/cstddef/size_t.md]
+* std::distance[link /reference/iterator/distance.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::sort[link sort.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>make_heap -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/make_heap.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/make_heap.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/make_heap.md b/reference/algorithm/make_heap.md
index e634913a1..ad9e9a8be 100644
--- a/reference/algorithm/make_heap.md
+++ b/reference/algorithm/make_heap.md
@@ -64,6 +64,10 @@ int main()
 }
 ```
 * std::make_heap[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/max.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/max.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/max.md b/reference/algorithm/max.md
index af1a6eb46..cc0846b8c 100644
--- a/reference/algorithm/max.md
+++ b/reference/algorithm/max.md
@@ -75,6 +75,7 @@ int main()
 ```
 * std::max[color ff0000]
 * std::greater[link /reference/functional/greater.md]
+* assert[link /reference/cassert/assert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_element -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/max_element.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/max_element.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/max_element.md b/reference/algorithm/max_element.md
index 5b042cb16..1655be9b8 100644
--- a/reference/algorithm/max_element.md
+++ b/reference/algorithm/max_element.md
@@ -71,6 +71,13 @@ int main()
 }
 ```
 * std::max_element[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::pair[link /reference/utility/pair.md]
+* v1.begin[link /reference/vector/vector/begin.md]
+* v1.end[link /reference/vector/vector/end.md]
+* v2.begin[link /reference/vector/vector/begin.md]
+* v2.end[link /reference/vector/vector/end.md]
+* assert[link /reference/cassert/assert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>merge -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/merge.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/merge.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/merge.md b/reference/algorithm/merge.md
index 933045f7b..f7a5db5f9 100644
--- a/reference/algorithm/merge.md
+++ b/reference/algorithm/merge.md
@@ -126,6 +126,10 @@ int main()
 * b.end()[link /reference/vector/vector/end.md]
 * result.begin()[link /reference/vector/vector/begin.md]
 * result.end()[link /reference/vector/vector/end.md]
+* std::back_inserter[link /reference/iterator/back_inserter.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::for_each[link /reference/algorithm/for_each.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/min.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/min.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/min.md b/reference/algorithm/min.md
index ed6e1e667..e129af295 100644
--- a/reference/algorithm/min.md
+++ b/reference/algorithm/min.md
@@ -75,6 +75,7 @@ int main()
 ```
 * std::min[color ff0000]
 * std::greater[link /reference/functional/greater.md]
+* assert[link /reference/cassert/assert.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>min_element -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/min_element.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/min_element.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/min_element.md b/reference/algorithm/min_element.md
index 53fe86498..84c132997 100644
--- a/reference/algorithm/min_element.md
+++ b/reference/algorithm/min_element.md
@@ -70,6 +70,15 @@ int main()
 }
 ```
 * std::min_element[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v1.begin[link /reference/vector/vector/begin.md]
+* v1.end[link /reference/vector/vector/end.md]
+* v2.begin[link /reference/vector/vector/begin.md]
+* v2.end[link /reference/vector/vector/end.md]
+* std::pair[link /reference/utility/pair.md]
+* assert[link /reference/cassert/assert.md]
+* v2_min_element-&amp;gt;first[link /reference/utility/pair/first.md.nolink]
+* v2_min_element-&amp;gt;second[link /reference/utility/pair/second.md.nolink]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>minmax -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/minmax.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/minmax.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/minmax.md b/reference/algorithm/minmax.md
index 1d9339d52..9423d3628 100644
--- a/reference/algorithm/minmax.md
+++ b/reference/algorithm/minmax.md
@@ -95,7 +95,16 @@ int main()
 ```
 * std::minmax[color ff0000]
 * std::greater[link /reference/functional/greater.md]
-
+* std::pair[link /reference/utility/pair.md]
+* assert[link /reference/cassert/assert.md]
+* result1.first[link /reference/utility/pair/first.md.nolink]
+* result1.second[link /reference/utility/pair/second.md.nolink]
+* result2.first[link /reference/utility/pair/first.md.nolink]
+* result2.second[link /reference/utility/pair/second.md.nolink]
+* result3.first[link /reference/utility/pair/first.md.nolink]
+* result3.second[link /reference/utility/pair/second.md.nolink]
+* result4.first[link /reference/utility/pair/first.md.nolink]
+* result4.second[link /reference/utility/pair/second.md.nolink]
 ### 出力
 ```
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>minmax_element -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/minmax_element.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/minmax_element.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/minmax_element.md b/reference/algorithm/minmax_element.md
index 12d6635b4..270cc1e73 100644
--- a/reference/algorithm/minmax_element.md
+++ b/reference/algorithm/minmax_element.md
@@ -78,7 +78,14 @@ int main()
 }
 ```
 * std::minmax_element[color ff0000]
-
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* *i.first[link /reference/utility/pair/first.md.nolink]
+* *i.second[link /reference/utility/pair/second.md.nolink]
+* *j.first[link /reference/utility/pair/first.md.nolink]
+* *j.second[link /reference/utility/pair/second.md.nolink]
+* assert[link /reference/cassert/assert.md]
 ### 出力
 ```
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>mismatch -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/mismatch.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/mismatch.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/mismatch.md b/reference/algorithm/mismatch.md
index fd91e928b..fbe48ea0c 100644
--- a/reference/algorithm/mismatch.md
+++ b/reference/algorithm/mismatch.md
@@ -146,6 +146,18 @@ int main() {
 ```
 * std::mismatch[color ff0000]
 * std::to_string[link /reference/string/to_string.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* *p.first[link /reference/utility/pair/first.md.nolink]
+* *p.second[link /reference/utility/pair/second.md.nolink]
+* std::vector[link /reference/vector/vector.md]
+* std::array[link /reference/array/array.md]
+* std::list[link /reference/list/list.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* v2.begin[link /reference/array/array/begin.md]
+* v3.begin[link /reference/list/list/begin.md]
+* v3.end[link /reference/list/list/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/move.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/move.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/move.md b/reference/algorithm/move.md
index a52904c38..6100e3081 100644
--- a/reference/algorithm/move.md
+++ b/reference/algorithm/move.md
@@ -73,6 +73,17 @@ int main() {
 ```
 * std::move[color ff0000]
 * v.emplace_back[link /reference/vector/vector/emplace_back.md]
+* std::vector[link /reference/vector/vector.md]
+* std::unique_ptr[link /reference/memory/unique_ptr.md]
+* std::back_inserter[link /reference/iterator/back_inserter.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* v.emplace_back[link /reference/vector/vector/emplace_back.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* v2.begin[link /reference/vector/vector/begin.md]
+* v2.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>move_backward -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/move_backward.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/move_backward.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/move_backward.md b/reference/algorithm/move_backward.md
index 460289ed1..450ba5552 100644
--- a/reference/algorithm/move_backward.md
+++ b/reference/algorithm/move_backward.md
@@ -77,6 +77,10 @@ int main() {
 * std::move_backward[color ff0000]
 * v.emplace_back[link /reference/vector/vector/emplace_back.md]
 * std::move[link move.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::unique_ptr[link /reference/memory/unique_ptr.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>next_permutation -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/next_permutation.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/next_permutation.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/next_permutation.md b/reference/algorithm/next_permutation.md
index 016788587..d686d3156 100644
--- a/reference/algorithm/next_permutation.md
+++ b/reference/algorithm/next_permutation.md
@@ -81,6 +81,12 @@ int main ()
 }
 ```
 * std::next_permutation[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>none_of -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/none_of.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/none_of.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/none_of.md b/reference/algorithm/none_of.md
index 77520c8ad..5de0d5853 100644
--- a/reference/algorithm/none_of.md
+++ b/reference/algorithm/none_of.md
@@ -68,6 +68,12 @@ int main() {
 }
 ```
 * std::none_of[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>nth_element -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/nth_element.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/nth_element.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/nth_element.md b/reference/algorithm/nth_element.md
index 6c8890ac7..8e01a8e68 100644
--- a/reference/algorithm/nth_element.md
+++ b/reference/algorithm/nth_element.md
@@ -86,6 +86,12 @@ int main()
 }
 ```
 * std::nth_element[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partial_sort -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partial_sort.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/partial_sort.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partial_sort.md b/reference/algorithm/partial_sort.md
index 4c0d67336..6dfb6c1ba 100644
--- a/reference/algorithm/partial_sort.md
+++ b/reference/algorithm/partial_sort.md
@@ -85,6 +85,12 @@ int main()
 }
 ```
 * std::partial_sort[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partial_sort_copy -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partial_sort_copy.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/partial_sort_copy.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partial_sort_copy.md b/reference/algorithm/partial_sort_copy.md
index f70f56d01..84978e812 100644
--- a/reference/algorithm/partial_sort_copy.md
+++ b/reference/algorithm/partial_sort_copy.md
@@ -97,6 +97,12 @@ int main()
 * std::partial_sort_copy[color ff0000]
 * result.begin()[link /reference/vector/vector/begin.md]
 * result.end()[link /reference/vector/vector/end.md]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partition.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/partition.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partition.md b/reference/algorithm/partition.md
index 452a9625b..fd4bc8dd0 100644
--- a/reference/algorithm/partition.md
+++ b/reference/algorithm/partition.md
@@ -82,6 +82,12 @@ int main()
 }
 ```
 * std::partition[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>partition_copy -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/partition_copy.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/partition_copy.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/partition_copy.md b/reference/algorithm/partition_copy.md
index cdcac7400..184cdc8d7 100644
--- a/reference/algorithm/partition_copy.md
+++ b/reference/algorithm/partition_copy.md
@@ -106,6 +106,15 @@ int main()
 }
 ```
 * std::partition_copy[color ff0000]
+* std::string[link /reference/string/string.md.nolink]
+* std::vector[link /reference/vector/vector.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::back_inserter[link /reference/iterator/back_inserter.md]
+* is_even[link /reference/algorithm/is_partitioned.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>prev_permutation -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/prev_permutation.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/prev_permutation.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/prev_permutation.md b/reference/algorithm/prev_permutation.md
index 3af16602f..aeb7a783b 100644
--- a/reference/algorithm/prev_permutation.md
+++ b/reference/algorithm/prev_permutation.md
@@ -76,6 +76,12 @@ int main ()
 }
 ```
 * std::prev_permutation[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::for_each[link /reference/algorithm/for_each.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>random_shuffle -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/random_shuffle.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/random_shuffle.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/random_shuffle.md b/reference/algorithm/random_shuffle.md
index fc8e3c332..41ab8bbe2 100644
--- a/reference/algorithm/random_shuffle.md
+++ b/reference/algorithm/random_shuffle.md
@@ -85,6 +85,14 @@ int main() {
 }
 ```
 * std::random_shuffle[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::iota[link /reference/numeric/iota.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::ostream_iterator[link /reference/iterator/ostream_iterator.md]
+* std::copy[link /reference/algorithm/copy.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>adjacent_find -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_adjacent_find.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_adjacent_find.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_adjacent_find.md b/reference/algorithm/ranges_adjacent_find.md
index 4685f276c..171fbcaa3 100644
--- a/reference/algorithm/ranges_adjacent_find.md
+++ b/reference/algorithm/ranges_adjacent_find.md
@@ -82,6 +82,12 @@ int main() {
 ```
 * std::ranges::distance[link /reference/iterator/ranges_distance.md]
 * std::ranges::adjacent_find[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* v.begin[link /reference/vector/vector/begin.md]
+* v.end[link /reference/vector/vector/end.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>all_of -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_all_of.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_all_of.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_all_of.md b/reference/algorithm/ranges_all_of.md
index 09cb6a9a9..79b2ed26e 100644
--- a/reference/algorithm/ranges_all_of.md
+++ b/reference/algorithm/ranges_all_of.md
@@ -63,6 +63,10 @@ int main() {
 }
 ```
 * std::ranges::all_of[color ff0000]
+* std::array[link /reference/array/array.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>any_of -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_any_of.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_any_of.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_any_of.md b/reference/algorithm/ranges_any_of.md
index 77e2ffd1e..0d12fc585 100644
--- a/reference/algorithm/ranges_any_of.md
+++ b/reference/algorithm/ranges_any_of.md
@@ -65,6 +65,10 @@ int main() {
 }
 ```
 * std::ranges::any_of[color ff0000]
+* std::array[link /reference/array/array.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
+* std::boolalpha[link /reference/ios/boolalpha.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>binary_search -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_binary_search.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_binary_search.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_binary_search.md b/reference/algorithm/ranges_binary_search.md
index a0c9bd581..30448aa3d 100644
--- a/reference/algorithm/ranges_binary_search.md
+++ b/reference/algorithm/ranges_binary_search.md
@@ -118,6 +118,9 @@ int main()
 }
 ```
 * std::ranges::binary_search[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>clamp -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_clamp.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_clamp.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_clamp.md b/reference/algorithm/ranges_clamp.md
index 489120d53..af760c787 100644
--- a/reference/algorithm/ranges_clamp.md
+++ b/reference/algorithm/ranges_clamp.md
@@ -44,6 +44,8 @@ int main()
 }
 ```
 * std::ranges::clamp[color ff0000]
+* std::cout[link /reference/iostream/cout.md]
+* std::endl[link /reference/ostream/endl.md]
 
 ### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>contains_subrange -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_contains_subrange.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_contains_subrange.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_contains_subrange.md b/reference/algorithm/ranges_contains_subrange.md
index cdd3ae99c..17167aaf1 100644
--- a/reference/algorithm/ranges_contains_subrange.md
+++ b/reference/algorithm/ranges_contains_subrange.md
@@ -58,6 +58,9 @@ int main() {
 }
 ```
 * std::ranges::contains_subrange[color ff0000]
+* std::vector[link /reference/vector/vector.md]
+* std::list[link /reference/list/list.md]
+* std::println[link /reference/print/println.md]
 
 #### 出力
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fold_right_last -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_fold_right_last.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/algorithm/ranges_fold_right_last.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_fold_right_last.md b/reference/algorithm/ranges_fold_right_last.md
index 98b1aa174..2e3d621ab 100644
--- a/reference/algorithm/ranges_fold_right_last.md
+++ b/reference/algorithm/ranges_fold_right_last.md
@@ -139,7 +139,7 @@ int main() {
   range auto rng = views::empty&amp;lt;int&amp;gt;;
   auto op = std::plus&amp;lt;&amp;gt;{};
 
-  auto res1 = fold_left(rng, -1, op);
+  auto res1 = fold_right(rng, -1, op);
   auto res2 = fold_right_last(rng, op);
 
   std::println(&amp;#34;{:d}&amp;#34;, res1);
@@ -147,7 +147,7 @@ int main() {
 }
 ```
 * fold_right_last[color ff0000]
-* fold_left[link ranges_fold_right.md]
+* fold_right[link ranges_fold_right.md]
 * println[link /reference/print/println.md]
 * value_or[link /reference/optional/optional/value_or.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>cstdlib -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <content type="html">&lt;div class=&#34;header&#34;&gt;&amp;lt;cstdlib&amp;gt;&lt;/div&gt;&lt;h1 itemprop=&#34;name&#34;&gt;&lt;span class=&#34;token&#34;&gt;cstdlib&lt;/span&gt;&lt;/h1&gt;
&lt;div itemprop=&#34;articleBody&#34;&gt;&lt;p&gt;&lt;code&gt;&amp;lt;cstdlib&amp;gt;&lt;/code&gt;ヘッダでは、一般的なユーティリティの関数を定義する。これらの機能は基本的には、&lt;code&gt;std&lt;/code&gt;名前空間に属することを除いてC言語の標準ライブラリ&lt;code&gt;&amp;lt;stdlib.h&amp;gt;&lt;/code&gt;ヘッダと同じである。&lt;/p&gt;
&lt;p&gt;本ヘッダはフリースタンディング環境でも提供される。
フリースタンディング環境の場合、少なくとも&lt;code&gt;abort&lt;/code&gt;, &lt;code&gt;atexit&lt;/code&gt;, &lt;code&gt;at_quick_exit&lt;/code&gt;, &lt;code&gt;exit&lt;/code&gt;, &lt;code&gt;quick_exit&lt;/code&gt;関数がサポートされる。&lt;/p&gt;
&lt;p&gt;ただし、一部の機能には、&lt;code&gt;[[noreturn]]&lt;/code&gt;属性、&lt;code&gt;noexcept&lt;/code&gt;キーワード、スレッドローカルストレージのような、C++特有の言語機能に関する規定がある。&lt;/p&gt;
&lt;h2&gt;数値変換&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atoi_atol_atoll.html&#34;&gt;atoi&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;int&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atoi_atol_atoll.html&#34;&gt;atol&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atoi_atol_atoll.html&#34;&gt;atoll&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;long long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atof.html&#34;&gt;atof&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を&lt;code&gt;double&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtol&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtoll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;long long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtoul&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;unsigned long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtoull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、基数を指定して&lt;code&gt;unsigned long long&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtof&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、&lt;code&gt;float&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtod&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、&lt;code&gt;double&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;strtold&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字列を、&lt;code&gt;long double&lt;/code&gt;型に変換する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;擬似乱数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/rand_max.html&#34;&gt;RAND_MAX&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;rand&lt;/code&gt;関数によって生成される値域の最大値を表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;C++14から非推奨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/srand.html&#34;&gt;srand&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;rand&lt;/code&gt;関数によって生成される擬似乱数のシードを指定する (function)&lt;/td&gt;
&lt;td&gt;C++14から非推奨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/rand.html&#34;&gt;rand&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;srand&lt;/code&gt;で指定されたシードを元に、擬似乱数を生成する (function)&lt;/td&gt;
&lt;td&gt;C++14から非推奨&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;メモリ管理&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/aligned_alloc.html&#34;&gt;aligned_alloc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定したアライメントでメモリを確保する (function)&lt;/td&gt;
&lt;td&gt;C++17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/malloc.html&#34;&gt;malloc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリを確保する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/calloc.html&#34;&gt;calloc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリを確保し、領域をゼロ初期化する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/realloc.md.nolink&#34;&gt;realloc&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;メモリを再確保する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/free.html&#34;&gt;free&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;確保したメモリを解放する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;プログラムの開始と終了&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit_failure.html&#34;&gt;EXIT_FAILURE&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが異常終了したことを表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit_success.html&#34;&gt;EXIT_SUCCESS&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが正常終了したことを表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abort.html&#34;&gt;abort&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムを異常終了させる (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit_.html&#34;&gt;_Exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;後処理をせずに、プログラムを終了させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/exit.html&#34;&gt;exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムを終了させる (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/atexit.html&#34;&gt;atexit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;プログラムが通常の方法で終了するときに呼ばれる関数を登録する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/quick_exit.html&#34;&gt;quick_exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;後処理をせずに、プログラムを終了させる (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/at_quick_exit.html&#34;&gt;at_quick_exit&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;quick_exit&lt;/code&gt;関数でプログラムが終了するときに呼ばれる関数を登録する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/getenv.html&#34;&gt;getenv&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;環境変数を取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/system.html&#34;&gt;system&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;システムコマンドを実行する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;検索と並び替え&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bsearch&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;二分探索を行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;qsort&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;範囲の並べ替えを行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;整数に対する算術関数&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abs.html&#34;&gt;abs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;の絶対値を取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abs.html&#34;&gt;labs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long&lt;/code&gt;の絶対値を取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/abs.html&#34;&gt;llabs&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long long&lt;/code&gt;の絶対値を取得する (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div_t.html&#34;&gt;div_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;div&lt;/code&gt;関数の戻り値型 (class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div.html&#34;&gt;div&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;の除算と剰余算を行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/ldiv_t.html&#34;&gt;ldiv_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ldiv&lt;/code&gt;関数の戻り値型 (class)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div.html&#34;&gt;ldiv&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long&lt;/code&gt;の除算と剰余算を行う (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/lldiv_t.html&#34;&gt;lldiv_t&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;lldiv&lt;/code&gt;関数の戻り値型 (class)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&lt;a href=&#34;cstdlib/div.html&#34;&gt;lldiv&lt;/a&gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;long long&lt;/code&gt;の除算と剰余算を行う (function)&lt;/td&gt;
&lt;td&gt;C++11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;マルチバイト文字とワイド文字の変換&lt;/h2&gt;
&lt;table border=&#34;1&#34; bordercolor=&#34;#888&#34; style=&#34;border-collapse:collapse&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名前&lt;/th&gt;
&lt;th&gt;説明&lt;/th&gt;
&lt;th&gt;対応バージョン&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MB_CUR_MAX&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字列の最大サイズを表す整数値マクロ (macro)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mblen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字の長さを取得する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mbtowc&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字を、ワイド文字に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;wctomb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ワイド文字を、マルチバイト文字に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mbstowcs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マルチバイト文字列を、ワイド文字列に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;wcstombs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ワイド文字列を、マルチバイト文字列に変換する (function)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;</content>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atof -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/atof.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/atof.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/atof.md b/reference/cstdlib/atof.md
index d24063fdf..8a2a2d64d 100644
--- a/reference/cstdlib/atof.md
+++ b/reference/cstdlib/atof.md
@@ -4,7 +4,9 @@
 * function[meta id-type]
 
 ```cpp
-double atof( const char* str );
+namespace std {
+  double atof( const char* str );
+}
 ```
 
 ## 概要
@@ -38,25 +40,18 @@ double atof( const char* str );
  
 int main()
 {
-    std::cout &amp;lt;&amp;lt; std::atof(&amp;#34;0.0000000123&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;0.012&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;15e16&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;-0x1afp-2&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;inF&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;12Nan23&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;NAN&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
-              &amp;lt;&amp;lt; std::atof(&amp;#34;invalid&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::cout &amp;lt;&amp;lt; std::atof(&amp;#34;0.0000000123&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;0.012&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;15e16&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;-0x1afp-2&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;inF&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;12Nan23&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;NAN&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;
+            &amp;lt;&amp;lt; std::atof(&amp;#34;invalid&amp;#34;) &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
-## バージョン
-### 処理系
-- Clang: ?
-- GCC: 13[mark verified]
-- ICC:  ?
-- Visual C++
-
-## 出力結果
+## 出力例
 
 ```
 1.23e-08
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>atoi,atol,atoll -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/atoi_atol_atoll.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/atoi_atol_atoll.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/atoi_atol_atoll.md b/reference/cstdlib/atoi_atol_atoll.md
index 15a4246c0..114b1c79f 100644
--- a/reference/cstdlib/atoi_atol_atoll.md
+++ b/reference/cstdlib/atoi_atol_atoll.md
@@ -4,9 +4,11 @@
 * function[meta id-type]
 
 ```cpp
-int       atoi ( const char* str );
-long      atol ( const char* str );
-long long atoll( const char* str );
+namespace std {
+  int       atoi ( const char* str );
+  long      atol ( const char* str );
+  long long atoll( const char* str );
+}
 ```
 
 ## 概要
@@ -33,18 +35,18 @@ long long atoll( const char* str );
 ## 例
 
 ```cpp example
-#include &amp;lt;stdio.h&amp;gt;
-#include &amp;lt;stdlib.h&amp;gt;
+#include &amp;lt;cstdio&amp;gt;
+#include &amp;lt;cstdlib&amp;gt;
  
 int main(void)
 {
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34; -123junk&amp;#34;));
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34; +321dust&amp;#34;));
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;0&amp;#34;));
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;0042&amp;#34;)); // 先頭の0を含む10進数として変換
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;0x2A&amp;#34;)); // 0のみを変換、&amp;#34;x2A&amp;#34;は破棄される
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;junk&amp;#34;)); // 変換不可
-    printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;2147483648&amp;#34;)); //intの範囲外
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34; -123junk&amp;#34;));
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34; +321dust&amp;#34;));
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;0&amp;#34;));
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;0042&amp;#34;)); // 先頭の0を含む10進数として変換
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;0x2A&amp;#34;)); // 0のみを変換、&amp;#34;x2A&amp;#34;は破棄される
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;junk&amp;#34;)); // 変換不可
+  printf(&amp;#34;%i\n&amp;#34;, atoi(&amp;#34;2147483648&amp;#34;)); //intの範囲外
 }
 ```
 
@@ -60,13 +62,6 @@ int main(void)
 -2147483648
 ```
 
-## バージョン
-### 処理系
-- Clang: ?
-- GCC: 13[mark verified]
-- ICC:  ?
-- Visual C++ ?
-
 ## 関連項目
 - [`stoi`](/reference/string/stoi.md)
 - [`stol`](/reference/string/stol.md)
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>calloc -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/calloc.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/calloc.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/calloc.md b/reference/cstdlib/calloc.md
index a234a0450..c370b8ad1 100644
--- a/reference/cstdlib/calloc.md
+++ b/reference/cstdlib/calloc.md
@@ -4,49 +4,51 @@
 * std[meta namespace]
 * function[meta id-type]
 
-## 概要
-
-```
-void *calloc(size_t nmemb, size_t size);
+```cpp
+namespace std {
+  void *calloc(size_t nmemb, size_t size);
+}
 ```
 
+## 概要
+
 任意の個数のオブジェクトへの配列用ポインタを動的に確保し、その領域を 0 で初期化する。
 
 この関数で返されるポインタは、割当領域の先頭のポインタである。
 
-領域が割り当てられない場合は、[`nullptr`](/lang/cpp11/nullptr.md)を返す。
+領域の確保に失敗し た場合は、[`nullptr`](/lang/cpp11/nullptr.md)を返す。
 
-割り当てられたオブジェクトの寿命は、このメモリが割り当てられてられた時から、[`free`](free.md.nolink)などで解放されるまでである。
+割り当てられたオブジェクトの寿命は、このメモリが割り当てられた時から、[`free`](free.md)などで解放されるまでである。
 
-この関数は、静的ストレージにはアクセスしない、スレッドセーフである。
+この関数は、静的ストレージにはアクセスせず、スレッドセーフである。
 
 ## 備考
 
-- `calloc`、`malloc`および `realloc`関数による連続的なメモリ確保によるメモリの割当の順序、連続性は不定である。
+- `calloc`・`malloc`・`realloc` によって複数個の異なる領域が確保された場合、それらの連続性や順序は保証されない。
 
-- 目盛りリークを避けるため、この関数で確保したメモリは、`free`などを使い、メモリ解放するべきである。
+- メモリリークを避けるため、この関数で確保したメモリは、`free`などを使い、メモリ解放するべきである。
 
 ## 例
 
 ```cpp example
-#include &amp;lt;stdio.h&amp;gt;
-#include &amp;lt;stdlib.h&amp;gt;
+#include &amp;lt;cstdio&amp;gt;
+#include &amp;lt;cstdlib&amp;gt;
 
 int main(void)
 {
-    int* p1 = calloc(4, sizeof(int));    // 4個のint配列のポインタを確保、0二初期化
-    int* p2 = calloc(1, sizeof(int[4])); // 上と同じ
-    int* p3 = calloc(4, sizeof *p3);     // 上と同じ
-
-    if (p2)
-    {
-        for (int n = 0; n &amp;lt; 4; ++n)
-            printf(&amp;#34;p2[%d] == %d\n&amp;#34;, n, p2[n]);
-    }
-
-    free(p1);
-    free(p2);
-    free(p3);
+  int* p1 = calloc(4, sizeof(int));    // 4個のint配列のポインタを確保、0に初期化
+  int* p2 = calloc(1, sizeof(int[4])); // 上と同じ
+  int* p3 = calloc(4, sizeof *p3);     // 上と同じ
+
+  if (p2)
+  {
+    for (int n = 0; n &amp;lt; 4; ++n)
+      printf(&amp;#34;p2[%d] == %d\n&amp;#34;, n, p2[n]);
+  }
+
+  free(p1);
+  free(p2);
+  free(p3);
 }
 ```
 
@@ -61,7 +63,7 @@ p2[3] == 0
 
 ## 関連項目
 
-- `free`:確保されたメモリを解放する。
+- [`free`](free.md):確保されたメモリを解放する。
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>free -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/free.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/free.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/free.md b/reference/cstdlib/free.md
new file mode 100644
index 000000000..8d785c808
--- /dev/null
+++ b/reference/cstdlib/free.md
@@ -0,0 +1,48 @@
+# free
+* cstdlib[meta header]
+* std[meta namespace]
+* function[meta id-type]
+
+```cpp
+namespace std {
+  void free(void* ptr) noexcept;
+}
+```
+
+## 概要
+`malloc`、`calloc`、`aligned_alloc`、`realloc`で確保されたメモリ領域を解放する。
+
+解放済みのポインタを再度 `free` に渡したり、アクセスしたりするときの動作は未定義となる。
+
+ポインタが`nullptr`の場合、この関数は何も実行しない。
+
+解放されたポインタに再びアクセスする場合、未定義動作を引き起こす恐れがある。
+
+## 備考
+この関数はスレッドセーフである。
+
+## 実装例
+```cpp example
+int main(void)
+{
+  int *p1 = malloc(10*sizeof *p1);
+  free(p1); // p1のメモリを解放
+
+  int *p2 = calloc(10, sizeof *p2);
+  int *p3 = realloc(p2, 1000*sizeof *p3);
+  if(p3) 
+    free(p3); // realloc により新しい領域が確保された場合、それを解放
+  else
+    free(p2); // realloc が失敗した場合は元の領域を解放
+}
+```
+### 出力
+```
+
+```
+
+## 関連項目
+- [`aligned_alloc`](aligned_alloc.md):指定したアライメントでメモリを確保する
+- [`malloc`](malloc.md):メモリを確保する
+- [`calloc`](calloc.md):メモリを確保する(0で初期化する)
+- [`realloc`](realloc.md.nolink):メモリを再確保する
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>getenv -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/getenv.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/getenv.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/getenv.md b/reference/cstdlib/getenv.md
index 32b64c2fb..f99577bb6 100644
--- a/reference/cstdlib/getenv.md
+++ b/reference/cstdlib/getenv.md
@@ -4,7 +4,9 @@
 * function[meta id-type]
 
 ```cpp
-char* getenv( const char* env_var );
+namespace std {
+  char* getenv( const char* env_var );
+}
 ```
 
 ## 概要
@@ -28,12 +30,12 @@ C++11以降では、`getenv`が返す文字列を変更したときの動作は
  
 int main()
 {
-    if (const char* env_p = std::getenv(&amp;#34;PATH&amp;#34;))
-        std::cout &amp;lt;&amp;lt; &amp;#34;Your PATH is: &amp;#34; &amp;lt;&amp;lt; env_p &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  if (const char* env_p = std::getenv(&amp;#34;PATH&amp;#34;))
+    std::cout &amp;lt;&amp;lt; &amp;#34;Your PATH is: &amp;#34; &amp;lt;&amp;lt; env_p &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
-## 出力結果
+## 出力例
 ```
 Your PATH is: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>malloc -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/malloc.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/malloc.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/malloc.md b/reference/cstdlib/malloc.md
index a6eb509f0..6820bc78f 100644
--- a/reference/cstdlib/malloc.md
+++ b/reference/cstdlib/malloc.md
@@ -4,12 +4,14 @@
 * std[meta namespace]
 * function[meta id-type]
 
-## 概要
-
 ```cpp
-void *malloc( size_t size );
+namespace std {
+  void *malloc( size_t size );
+}
 ```
 
+## 概要
+
 初期化されていない`size_t`個の`size`型配列のメモリを確保する。
 
 確保可能なら、配列の初めのポインタを返す。
@@ -40,20 +42,20 @@ cppref より引用。
 
 int main(void)
 {
-    int *p1 = malloc(4*sizeof(int));  // 4個のint型配列の目盛りを確保
-    int *p2 = malloc(sizeof(int[4])); // 上と同じ。
-    int *p3 = malloc(4*sizeof *p3);   // 上と同じ。
-
-    if(p1) {
-        for(int n=0; n&amp;lt;4; ++n)
-            p1[n] = n*n;
-        for(int n=0; n&amp;lt;4; ++n)
-            printf(&amp;#34;p1[%d] == %d\n&amp;#34;, n, p1[n]);
-    }
-
-    free(p1);//メモリを開放
-    free(p2);
-    free(p3);
+  int *p1 = malloc(4*sizeof(int));  // 4個のint型配列の目盛りを確保
+  int *p2 = malloc(sizeof(int[4])); // 上と同じ。
+  int *p3 = malloc(4*sizeof *p3);   // 上と同じ。
+
+  if(p1) {
+    for(int n=0; n&amp;lt;4; ++n)
+      p1[n] = n*n;
+    for(int n=0; n&amp;lt;4; ++n)
+      printf(&amp;#34;p1[%d] == %d\n&amp;#34;, n, p1[n]);
+  }
+
+  free(p1);//メモリを解放
+  free(p2);
+  free(p3);
 }
 ```
 
@@ -66,9 +68,9 @@ p1[2] == 4
 p1[3] == 9
 ```
 
-## 関連リンク
+## 関連項目
 
-- [`free`](/cstdlib/free.md.nolink): 確保したメモリを解放する。
+- [`free`](free.md): 確保したメモリを解放する。
 
 ## 参照
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>rand -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/rand.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/rand.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/rand.md b/reference/cstdlib/rand.md
index 9b8ded0db..0adee36d6 100644
--- a/reference/cstdlib/rand.md
+++ b/reference/cstdlib/rand.md
@@ -3,6 +3,12 @@
 * std[meta namespace]
 * function[meta id-type]
 
+```cpp
+namespace std {
+  int rand();
+}
+```
+
 ## 概要
 `0`から`RAND_MAX`までの値の疑似乱数を返す。
 
@@ -31,8 +37,8 @@
 
 int main() 
 {
-    std::srand(std::time(0)); // 現在時刻を疑似乱数のシード値とする。
-    std::cout &amp;lt;&amp;lt; std::rand() &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::srand(std::time(0)); // 現在時刻を疑似乱数のシード値とする。
+  std::cout &amp;lt;&amp;lt; std::rand() &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>RAND_MAX -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/rand_max.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/rand_max.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/rand_max.md b/reference/cstdlib/rand_max.md
index a78c39747..cbb6ba54b 100644
--- a/reference/cstdlib/rand_max.md
+++ b/reference/cstdlib/rand_max.md
@@ -22,10 +22,10 @@
  
 int main()
 {
-    // use current time as seed for random generator
-    std::srand(std::time(NULL));
+  // use current time as seed for random generator
+  std::srand(std::time(NULL));
  
-    std::cout &amp;lt;&amp;lt; &amp;#34;RAND_MAX: &amp;#34; &amp;lt;&amp;lt; RAND_MAX &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::cout &amp;lt;&amp;lt; &amp;#34;RAND_MAX: &amp;#34; &amp;lt;&amp;lt; RAND_MAX &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>srand -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/srand.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/srand.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/srand.md b/reference/cstdlib/srand.md
index 2b3b0b613..044fa8de5 100644
--- a/reference/cstdlib/srand.md
+++ b/reference/cstdlib/srand.md
@@ -4,7 +4,9 @@
 * function[meta id-type]
 
 ```cpp
-void srand( unsigned seed );
+namespace std {
+  void srand( unsigned seed );
+}
 ```
 
 ## 概要
@@ -33,8 +35,8 @@ void srand( unsigned seed );
  
 int main() 
 {
-    std::srand(std::time(0)); // 現在時刻を疑似乱数のシード値とする。
-    std::cout &amp;lt;&amp;lt; std::rand() &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
+  std::srand(std::time(0)); // 現在時刻を疑似乱数のシード値とする。
+  std::cout &amp;lt;&amp;lt; std::rand() &amp;lt;&amp;lt; &amp;#39;\n&amp;#39;;
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>system -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/system.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/cstdlib/system.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/system.md b/reference/cstdlib/system.md
index db93e60e7..6fd982735 100644
--- a/reference/cstdlib/system.md
+++ b/reference/cstdlib/system.md
@@ -4,7 +4,9 @@
 * function[meta id-type]
 
 ```cpp
-int system( const char* command );
+namespace std {
+  int system( const char* command );
+}
 ```
 
 ## 概要
@@ -30,8 +32,8 @@ POSIXでは`WEXITSTATUS`と`WSTOPSIG`を使用、分解できる
 
 int main()
 {
-    std::system(&amp;#34;ls -l &amp;gt;test.txt&amp;#34;);//&amp;#34;ls -l &amp;gt;test.txt&amp;#34;を実行
-    std::cout &amp;lt;&amp;lt; std::ifstream(&amp;#34;test.txt&amp;#34;).rdbuf();
+  std::system(&amp;#34;ls -l &amp;gt;test.txt&amp;#34;);//&amp;#34;ls -l &amp;gt;test.txt&amp;#34;を実行
+  std::cout &amp;lt;&amp;lt; std::ifstream(&amp;#34;test.txt&amp;#34;).rdbuf();
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_map/flat_map/emplace.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace.md b/reference/flat_map/flat_map/emplace.md
index 2891c120f..41a72d4a4 100644
--- a/reference/flat_map/flat_map/emplace.md
+++ b/reference/flat_map/flat_map/emplace.md
@@ -42,6 +42,12 @@ c.values.insert(value_it, std::move(t.second));
 ## 戻り値
 挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる [`pair`](/reference/utility/pair.md) を返す。挿入されなかったときは、既存要素へのイテレータを返す。
 
+## 計算量
+
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると
+
+- 新しい要素が挿入された場合: `N`に対して線形
+- 要素の挿入が行われなかった場合: `N`に対して対数
 
 ## 例
 ### 単純なキー・値を挿入する例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace_hint.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_map/flat_map/emplace_hint.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace_hint.md b/reference/flat_map/flat_map/emplace_hint.md
index 193f6698c..de5263167 100644
--- a/reference/flat_map/flat_map/emplace_hint.md
+++ b/reference/flat_map/flat_map/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると、`O(N)`（挿入が行われなかった場合は`O(log N)`より小さくなる可能性がある）。
 
 ## 備考
 - [`try_emplace`](try_emplace.md) と異なり、たとえ要素が挿入されなかった場合でも `value_type` 型のオブジェクトが構築される可能性があり、結果として引数 `args` が [`move`](/reference/utility/move.md) の対象となって変更されてしまっている可能性があるため、注意が必要である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_map/flat_map/insert.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert.md b/reference/flat_map/flat_map/insert.md
index 16e644ac2..a6481a73f 100644
--- a/reference/flat_map/flat_map/insert.md
+++ b/reference/flat_map/flat_map/insert.md
@@ -49,8 +49,6 @@ void insert(sorted_unique_t s,
 
 内部的に `flat_map` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -195,8 +193,11 @@ void insert(sorted_unique_t s,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/emplace.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_map/flat_multimap/emplace.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/emplace.md b/reference/flat_map/flat_multimap/emplace.md
index b82cd98d5..e9ac1748a 100644
--- a/reference/flat_map/flat_multimap/emplace.md
+++ b/reference/flat_map/flat_multimap/emplace.md
@@ -25,6 +25,9 @@ iterator emplace(Args&amp;amp;&amp;amp;... args);
 ## 戻り値
 挿入された要素へのイテレータを返す。
 
+## 計算量
+
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/emplace_hint.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_map/flat_multimap/emplace_hint.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/emplace_hint.md b/reference/flat_map/flat_multimap/emplace_hint.md
index 8bc40631b..019c1a265 100644
--- a/reference/flat_map/flat_multimap/emplace_hint.md
+++ b/reference/flat_map/flat_multimap/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/insert.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_map/flat_multimap/insert.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/insert.md b/reference/flat_map/flat_multimap/insert.md
index 08e944b5f..4f8ebed9f 100644
--- a/reference/flat_map/flat_multimap/insert.md
+++ b/reference/flat_map/flat_multimap/insert.md
@@ -45,8 +45,6 @@ void insert(sorted_equivalent_t,
 
 内部的に `flat_multimap` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -158,8 +156,11 @@ void insert(sorted_equivalent_t,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/emplace.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_set/flat_multiset/emplace.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/emplace.md b/reference/flat_set/flat_multiset/emplace.md
index 8ecfddf76..49c04e5e4 100644
--- a/reference/flat_set/flat_multiset/emplace.md
+++ b/reference/flat_set/flat_multiset/emplace.md
@@ -25,6 +25,9 @@ iterator emplace(Args&amp;amp;&amp;amp;... args);
 ## 戻り値
 挿入された要素へのイテレータを返す。
 
+## 計算量
+
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ### 単純な挿入の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/emplace_hint.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_set/flat_multiset/emplace_hint.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/emplace_hint.md b/reference/flat_set/flat_multiset/emplace_hint.md
index acaa29283..46e96497c 100644
--- a/reference/flat_set/flat_multiset/emplace_hint.md
+++ b/reference/flat_set/flat_multiset/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/insert.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_set/flat_multiset/insert.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/insert.md b/reference/flat_set/flat_multiset/insert.md
index 58985f98d..14294b61e 100644
--- a/reference/flat_set/flat_multiset/insert.md
+++ b/reference/flat_set/flat_multiset/insert.md
@@ -45,8 +45,6 @@ void insert(sorted_equivalent_t,
 
 内部的に `flat_multiset` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -148,8 +146,11 @@ void insert(sorted_equivalent_t,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/emplace.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_set/flat_set/emplace.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/emplace.md b/reference/flat_set/flat_set/emplace.md
index 25911c1f8..ff6a2ed59 100644
--- a/reference/flat_set/flat_set/emplace.md
+++ b/reference/flat_set/flat_set/emplace.md
@@ -37,6 +37,12 @@ c.insert(it, std::move(t));
 ## 戻り値
 挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる [`pair`](/reference/utility/pair.md) を返す。挿入されなかったときは、既存要素へのイテレータを返す。
 
+## 計算量
+
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると
+
+- 新しい要素が挿入された場合: `N`に対して線形
+- 要素の挿入が行われなかった場合: `N`に対して対数
 
 ## 例
 ### 単純な挿入の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/emplace_hint.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_set/flat_set/emplace_hint.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/emplace_hint.md b/reference/flat_set/flat_set/emplace_hint.md
index 8fd7b5a7c..46f6abed6 100644
--- a/reference/flat_set/flat_set/emplace_hint.md
+++ b/reference/flat_set/flat_set/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると、`O(N)`（挿入が行われなかった場合は`O(log N)`より小さくなる可能性がある）。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/insert.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/flat_set/flat_set/insert.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/insert.md b/reference/flat_set/flat_set/insert.md
index c6dbfc077..669f34497 100644
--- a/reference/flat_set/flat_set/insert.md
+++ b/reference/flat_set/flat_set/insert.md
@@ -49,8 +49,6 @@ void insert(sorted_unique_t s,
 
 内部的に `flat_set` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -159,8 +157,11 @@ void insert(sorted_unique_t s,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>memory_resource -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/memory_resource.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource.md b/reference/memory_resource.md
index d682a40bb..7b5116c83 100644
--- a/reference/memory_resource.md
+++ b/reference/memory_resource.md
@@ -25,7 +25,7 @@
 | 名前            | 説明           | 対応バージョン |
 |-----------------|----------------|----------------|
 |[`new_delete_resource`](memory_resource/new_delete_resource.md) | `operator new`、`operator delete`を利用する`memory_resource`を取得 | C++17 |
-|[`null_memory_resource`](memory_resource/null_memory_resource.md) | 確保も開放も行わない`memory_resource`を取得 | C++17 |
+|[`null_memory_resource`](memory_resource/null_memory_resource.md) | 確保も解放も行わない`memory_resource`を取得 | C++17 |
 |[`set_default_resource`](memory_resource/set_default_resource.md) | デフォルトで使用される`memory_resource`の設定 | C++17 |
 |[`get_default_resource`](memory_resource/get_default_resource.md) | デフォルトで使用される`memory_resource`の取得 | C++17 |
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>null_memory_resource -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/memory_resource/null_memory_resource.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/memory_resource/null_memory_resource.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/memory_resource/null_memory_resource.md b/reference/memory_resource/null_memory_resource.md
index 7cd0304a8..811013995 100644
--- a/reference/memory_resource/null_memory_resource.md
+++ b/reference/memory_resource/null_memory_resource.md
@@ -11,7 +11,7 @@ namespace std::pmr {
 ```
 
 ## 概要
-メモリの確保も開放も行わない`memory_resource`を取得する。
+メモリの確保も解放も行わない`memory_resource`を取得する。
 
 この関数によって取得された`memory_resource`は以下の特徴を持つ。
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>コンストラクタ -- Merge branch &#39;master&#39; into remove_duplicated_qualify</title>
      <link href="https://cpprefjp.github.io/reference/ranges/subrange/op_constructor.html"/>
      <id>d406af8343b5dafaf705cf4eed843f0d38c029be:reference/ranges/subrange/op_constructor.md</id>
      <updated>2025-07-08T00:03:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ranges/subrange/op_constructor.md b/reference/ranges/subrange/op_constructor.md
index 6fd21ca93..bb9620ac6 100644
--- a/reference/ranges/subrange/op_constructor.md
+++ b/reference/ranges/subrange/op_constructor.md
@@ -104,7 +104,7 @@ int main()
   const std::ranges::subrange sub5(fwl, 3);
   // forward_listはsized_rangeではないが、長さを指定しているのでsubrangeはsized_rangeとなり、sizeメンバ関数が定義される
   static_assert(std::ranges::sized_range&amp;lt;decltype(sub5)&amp;gt;);
-  assert(sub4.size() == 3);
+  assert(sub5.size() == 3);
 }
 ```
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Akira Takahashi</name>
        <email>faithandbrave@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_map/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace.md b/reference/flat_map/flat_map/emplace.md
index 155d95fdc..fbb790e47 100644
--- a/reference/flat_map/flat_map/emplace.md
+++ b/reference/flat_map/flat_map/emplace.md
@@ -44,6 +44,12 @@ c.values.insert(value_it, std::move(t.second));
 ## 戻り値
 挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる [`pair`](/reference/utility/pair.md) を返す。挿入されなかったときは、既存要素へのイテレータを返す。
 
+## 計算量
+
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると
+
+- 新しい要素が挿入された場合: `N`に対して線形
+- 要素の挿入が行われなかった場合: `N`に対して対数
 
 ## 例
 ### 単純なキー・値を挿入する例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_map/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/emplace_hint.md b/reference/flat_map/flat_map/emplace_hint.md
index 193f6698c..de5263167 100644
--- a/reference/flat_map/flat_map/emplace_hint.md
+++ b/reference/flat_map/flat_map/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると、`O(N)`（挿入が行われなかった場合は`O(log N)`より小さくなる可能性がある）。
 
 ## 備考
 - [`try_emplace`](try_emplace.md) と異なり、たとえ要素が挿入されなかった場合でも `value_type` 型のオブジェクトが構築される可能性があり、結果として引数 `args` が [`move`](/reference/utility/move.md) の対象となって変更されてしまっている可能性があるため、注意が必要である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_multimap/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/emplace.md b/reference/flat_map/flat_multimap/emplace.md
index b82cd98d5..e9ac1748a 100644
--- a/reference/flat_map/flat_multimap/emplace.md
+++ b/reference/flat_map/flat_multimap/emplace.md
@@ -25,6 +25,9 @@ iterator emplace(Args&amp;amp;&amp;amp;... args);
 ## 戻り値
 挿入された要素へのイテレータを返す。
 
+## 計算量
+
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_map/flat_multimap/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/emplace_hint.md b/reference/flat_map/flat_multimap/emplace_hint.md
index 8bc40631b..019c1a265 100644
--- a/reference/flat_map/flat_multimap/emplace_hint.md
+++ b/reference/flat_map/flat_multimap/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_multiset/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/emplace.md b/reference/flat_set/flat_multiset/emplace.md
index 02e7feb99..c6609212d 100644
--- a/reference/flat_set/flat_multiset/emplace.md
+++ b/reference/flat_set/flat_multiset/emplace.md
@@ -25,6 +25,9 @@ iterator emplace(Args&amp;amp;&amp;amp;... args);
 ## 戻り値
 挿入された要素へのイテレータを返す。
 
+## 計算量
+
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ### 単純な挿入の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_multiset/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/emplace_hint.md b/reference/flat_set/flat_multiset/emplace_hint.md
index acaa29283..46e96497c 100644
--- a/reference/flat_set/flat_multiset/emplace_hint.md
+++ b/reference/flat_set/flat_multiset/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+コンテナサイズ（[`size()`](size.md)）に対して線形
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/emplace.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_set/emplace.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/emplace.md b/reference/flat_set/flat_set/emplace.md
index 7378406a2..abd530ea2 100644
--- a/reference/flat_set/flat_set/emplace.md
+++ b/reference/flat_set/flat_set/emplace.md
@@ -39,6 +39,12 @@ c.insert(it, std::move(t));
 ## 戻り値
 挿入されたかどうかを示す `bool` と、挿入された要素へのイテレータからなる [`pair`](/reference/utility/pair.md) を返す。挿入されなかったときは、既存要素へのイテレータを返す。
 
+## 計算量
+
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると
+
+- 新しい要素が挿入された場合: `N`に対して線形
+- 要素の挿入が行われなかった場合: `N`に対して対数
 
 ## 例
 ### 単純な挿入の例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>emplace_hint -- flatなコンテナのemplace/_hintの計算量追記</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/emplace_hint.html"/>
      <id>42b481a53ba309965dac7fc99cea47367bc13098:reference/flat_set/flat_set/emplace_hint.md</id>
      <updated>2025-07-07T23:29:20+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/emplace_hint.md b/reference/flat_set/flat_set/emplace_hint.md
index 8fd7b5a7c..46f6abed6 100644
--- a/reference/flat_set/flat_set/emplace_hint.md
+++ b/reference/flat_set/flat_set/emplace_hint.md
@@ -24,8 +24,8 @@ iterator emplace_hint(const_iterator hint, Args&amp;amp;&amp;amp;... args);
 
 
 ## 計算量
-一般にコンテナのサイズについて対数時間だが、新しい要素が `hint` の前に挿入された場合は償却定数時間。
 
+操作の前のコンテナサイズ（[`size()`](size.md)）を`N`とすると、`O(N)`（挿入が行われなかった場合は`O(log N)`より小さくなる可能性がある）。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>free -- 出力結果−＞出力</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/free.html"/>
      <id>1b8a7cdc159a3c9475930fb8d215f8c9522c0b6b:reference/cstdlib/free.md</id>
      <updated>2025-07-07T13:40:35+00:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/free.md b/reference/cstdlib/free.md
index 389c2fbb8..8d785c808 100644
--- a/reference/cstdlib/free.md
+++ b/reference/cstdlib/free.md
@@ -36,7 +36,7 @@ int main(void)
     free(p2); // realloc が失敗した場合は元の領域を解放
 }
 ```
-### 出力結果
+### 出力
 ```
 
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>K10-K10</name>
        <email>keito.tottori@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_map/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_map/flat_map/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_map/insert.md b/reference/flat_map/flat_map/insert.md
index a4ce80b3f..f83c8ca4e 100644
--- a/reference/flat_map/flat_map/insert.md
+++ b/reference/flat_map/flat_map/insert.md
@@ -50,8 +50,6 @@ void insert(sorted_unique_t s,
 
 内部的に `flat_map` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -198,8 +196,11 @@ void insert(sorted_unique_t s,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_map/flat_multimap/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_map/flat_multimap/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_map/flat_multimap/insert.md b/reference/flat_map/flat_multimap/insert.md
index 08e944b5f..4f8ebed9f 100644
--- a/reference/flat_map/flat_multimap/insert.md
+++ b/reference/flat_map/flat_multimap/insert.md
@@ -45,8 +45,6 @@ void insert(sorted_equivalent_t,
 
 内部的に `flat_multimap` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -158,8 +156,11 @@ void insert(sorted_equivalent_t,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_multiset/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_set/flat_multiset/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_multiset/insert.md b/reference/flat_set/flat_multiset/insert.md
index 58985f98d..14294b61e 100644
--- a/reference/flat_set/flat_multiset/insert.md
+++ b/reference/flat_set/flat_multiset/insert.md
@@ -45,8 +45,6 @@ void insert(sorted_equivalent_t,
 
 内部的に `flat_multiset` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -148,8 +146,11 @@ void insert(sorted_equivalent_t,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
    <entry>
      <title>insert -- flatなコンテナのinsert()の計算量修正</title>
      <link href="https://cpprefjp.github.io/reference/flat_set/flat_set/insert.html"/>
      <id>39b99d1b9628accc8ddb71e9e2f08be4359ac926:reference/flat_set/flat_set/insert.md</id>
      <updated>2025-07-07T22:38:46+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/flat_set/flat_set/insert.md b/reference/flat_set/flat_set/insert.md
index 02134d89c..2096a7078 100644
--- a/reference/flat_set/flat_set/insert.md
+++ b/reference/flat_set/flat_set/insert.md
@@ -50,8 +50,6 @@ void insert(sorted_unique_t s,
 
 内部的に `flat_set` コンテナは、コンストラクト時に指定された比較オブジェクトによって要素を下位から上位へとソートして保持する。
 
-この操作は、適切な引数 `position` を提供することで効率を飛躍的に改善することができる。
-
 - (1) : 単一要素を挿入する
 - (2) : 単一要素の一時オブジェクトを挿入する
 - (3) : 指定された位置に、単一要素を挿入する
@@ -160,8 +158,11 @@ void insert(sorted_unique_t s,
 
 
 ## 計算量
+- (1)~(6) : コンテナサイズ（[`size()`](size.md)）に対して線形
 - (7) : Nをこの操作の前の[`size()`](size.md)、Mを[`distance`](/reference/iterator/distance.md)`(first, last)`として、N + MlogM
 - (8) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
+- (9) : Nをこの操作の前の[`size()`](size.md)、Mを`il.size()`として、N + MlogM
+- (10) : Nをこの操作のあとの[`size()`](size.md)として、Nに対して線形
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>onihusube</name>
        <email>44743040+onihusube@users.noreply.github.com</email>
      </author>
    </entry>
  
</feed>