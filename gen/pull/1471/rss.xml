<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cpprefjp - C++日本語リファレンス</title>
  <link href="https://cpprefjp.github.io" />
  <updated>2025-07-15T10:35:05.241069</updated>
  <id>03243c8f-22f7-48fc-a50c-923e9687d957</id>

  
    <entry>
      <title>exists -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/exists.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/exists.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/exists.md b/reference/filesystem/exists.md
index 912e2253d..cf5d951c8 100644
--- a/reference/filesystem/exists.md
+++ b/reference/filesystem/exists.md
@@ -24,14 +24,9 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
+    if (status_known(s)) {
+      ec.clear();
     }
-    if (!status_known(s)) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return exists(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_block_file -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_block_file.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_block_file.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_block_file.md b/reference/filesystem/is_block_file.md
index 834346138..0839083d7 100644
--- a/reference/filesystem/is_block_file.md
+++ b/reference/filesystem/is_block_file.md
@@ -26,17 +26,6 @@ Linux環境においては、`/dev/disk0`、`/dev/sda`、`/dev/loop0`などが
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    // ファイルが見つからなかったらエラー
-    file_type type = s.type();
-    if (type == file_type::none || file_type::not_found || file_type::unknown) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_block_file(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_character_file -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_character_file.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_character_file.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_character_file.md b/reference/filesystem/is_character_file.md
index 40acbaea2..b018947e0 100644
--- a/reference/filesystem/is_character_file.md
+++ b/reference/filesystem/is_character_file.md
@@ -26,17 +26,6 @@ Linux環境においては、`/dev/null`、`/dev/urandom`、`/dev/zero`などが
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    // ファイルが見つからなかったらエラー
-    file_type type = s.type();
-    if (type == file_type::none || file_type::not_found || file_type::unknown) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_character_file(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_directory -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_directory.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_directory.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_directory.md b/reference/filesystem/is_directory.md
index 90cc5e139..8925b1463 100644
--- a/reference/filesystem/is_directory.md
+++ b/reference/filesystem/is_directory.md
@@ -24,15 +24,6 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    if (!status_known(s)) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_directory(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_fifo -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_fifo.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_fifo.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_fifo.md b/reference/filesystem/is_fifo.md
index 3ddfd4df7..ffb2df2b5 100644
--- a/reference/filesystem/is_fifo.md
+++ b/reference/filesystem/is_fifo.md
@@ -24,17 +24,6 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    // ファイルが見つからなかったらエラー
-    file_type type = s.type();
-    if (type == file_type::none || file_type::not_found || file_type::unknown) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_fifo(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_other -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_other.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_other.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_other.md b/reference/filesystem/is_other.md
index c08eb6cb6..8a32fd937 100644
--- a/reference/filesystem/is_other.md
+++ b/reference/filesystem/is_other.md
@@ -32,11 +32,6 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    ec.clear();
     return is_other(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_regular_file -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_regular_file.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_regular_file.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_regular_file.md b/reference/filesystem/is_regular_file.md
index 6260bb6d2..daaa004ad 100644
--- a/reference/filesystem/is_regular_file.md
+++ b/reference/filesystem/is_regular_file.md
@@ -24,17 +24,6 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    // ファイルが見つからなかったらエラー
-    file_type type = s.type();
-    if (type == file_type::none || file_type::not_found || file_type::unknown) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_regular_file(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_socket -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_socket.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_socket.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_socket.md b/reference/filesystem/is_socket.md
index 56f6b6a53..4a9073789 100644
--- a/reference/filesystem/is_socket.md
+++ b/reference/filesystem/is_socket.md
@@ -24,17 +24,6 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    // ファイルが見つからなかったらエラー
-    file_type type = s.type();
-    if (type == file_type::none || file_type::not_found || file_type::unknown) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_socket(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>is_symlink -- fix(filesystem): 関数仕様の単純化</title>
      <link href="https://cpprefjp.github.io/reference/filesystem/is_symlink.html"/>
      <id>cbe4f356601c0cd5cd97d5239179914927df9354:reference/filesystem/is_symlink.md</id>
      <updated>2025-07-14T21:13:27+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/filesystem/is_symlink.md b/reference/filesystem/is_symlink.md
index 16f076dc0..ee0ed5996 100644
--- a/reference/filesystem/is_symlink.md
+++ b/reference/filesystem/is_symlink.md
@@ -24,17 +24,6 @@ namespace std::filesystem {
 - (3) :
     ```cpp
     file_status s = symlink_status(p, ec);
-    if (ec) {
-      return false;
-    }
-
-    // ファイルが見つからなかったらエラー
-    file_type type = s.type();
-    if (type == file_type::none || file_type::not_found || file_type::unknown) {
-      ec = implementation-defined;
-      return false;
-    }
-    ec.clear();
     return is_symlink(s);
     ```
     * file_status[link file_status.md]
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_copy -- style(algorithm,cmath): &#34;## {使用 =&gt; }例&#34;</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/ranges_reverse_copy.html"/>
      <id>f92deddede4f55c27ebd6be678617cca3c91c4aa:reference/algorithm/ranges_reverse_copy.md</id>
      <updated>2025-07-14T20:58:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/ranges_reverse_copy.md b/reference/algorithm/ranges_reverse_copy.md
index 40cffaef9..c0370b15d 100644
--- a/reference/algorithm/ranges_reverse_copy.md
+++ b/reference/algorithm/ranges_reverse_copy.md
@@ -51,7 +51,7 @@ namespace std::ranges {
 正確に `last - first` 回代入する
 
 
-## 使用例
+## 例
 ```cpp example
 #include &amp;lt;algorithm&amp;gt;
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>reverse_copy -- style(algorithm,cmath): &#34;## {使用 =&gt; }例&#34;</title>
      <link href="https://cpprefjp.github.io/reference/algorithm/reverse_copy.html"/>
      <id>f92deddede4f55c27ebd6be678617cca3c91c4aa:reference/algorithm/reverse_copy.md</id>
      <updated>2025-07-14T20:58:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/algorithm/reverse_copy.md b/reference/algorithm/reverse_copy.md
index 6c8a9f7c9..18dbbb6f9 100644
--- a/reference/algorithm/reverse_copy.md
+++ b/reference/algorithm/reverse_copy.md
@@ -46,7 +46,7 @@ namespace std {
 正確に `last - first` 回代入する
 
 
-## 使用例
+## 例
 ```cpp example
 #include &amp;lt;algorithm&amp;gt;
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>double_t -- style(algorithm,cmath): &#34;## {使用 =&gt; }例&#34;</title>
      <link href="https://cpprefjp.github.io/reference/cmath/double_t.html"/>
      <id>f92deddede4f55c27ebd6be678617cca3c91c4aa:reference/cmath/double_t.md</id>
      <updated>2025-07-14T20:58:53+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/double_t.md b/reference/cmath/double_t.md
index 804f17b82..8086636d8 100644
--- a/reference/cmath/double_t.md
+++ b/reference/cmath/double_t.md
@@ -16,7 +16,7 @@ namespace std {
 
 [`FLT_EVAL_METHOD`](/reference/cfloat/flt_eval_method.md) が 0 または 1 のとき `double`, 2 のとき `long double`, それ以外の場合は実装依存。
 
-## 使用例
+## 例
 ```cpp example
 #include &amp;lt;cmath&amp;gt;
 #include &amp;lt;iostream&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fexcept_t -- fix(cmath,cfenv): コード修飾を追加・修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fexcept_t.html"/>
      <id>2761b7cf19cfd565ed67008ee0f5ccce1d83e859:reference/cfenv/fexcept_t.md</id>
      <updated>2025-07-14T20:54:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fexcept_t.md b/reference/cfenv/fexcept_t.md
index 7b579b8e0..153ffe274 100644
--- a/reference/cfenv/fexcept_t.md
+++ b/reference/cfenv/fexcept_t.md
@@ -37,7 +37,7 @@ int main()
   }
 }
 ```
-* fexcept_t[color ff0000]
+* std::fexcept_t[color ff0000]
 * std::fegetexceptflag[link fegetexceptflag.md]
 * FE_ALL_EXCEPT[link fe_all_except.md]
 
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>double_t -- fix(cmath,cfenv): コード修飾を追加・修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/double_t.html"/>
      <id>2761b7cf19cfd565ed67008ee0f5ccce1d83e859:reference/cmath/double_t.md</id>
      <updated>2025-07-14T20:54:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/double_t.md b/reference/cmath/double_t.md
index f0b1441be..804f17b82 100644
--- a/reference/cmath/double_t.md
+++ b/reference/cmath/double_t.md
@@ -25,6 +25,7 @@ int main() {
 	std::cout &amp;lt;&amp;lt; num &amp;lt;&amp;lt; std::endl;
 }
 ```
+* std::double_t[color ff0000]
 
 ## 出力例
 ```
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float_t -- fix(cmath,cfenv): コード修飾を追加・修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/float_t.html"/>
      <id>2761b7cf19cfd565ed67008ee0f5ccce1d83e859:reference/cmath/float_t.md</id>
      <updated>2025-07-14T20:54:35+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/float_t.md b/reference/cmath/float_t.md
index c63a8260a..dd6a4bd1f 100644
--- a/reference/cmath/float_t.md
+++ b/reference/cmath/float_t.md
@@ -25,6 +25,8 @@ int main() {
 	std::cout &amp;lt;&amp;lt; num &amp;lt;&amp;lt; std::endl;
 }
 ```
+* std::float_t[color ff0000]
+
 ## 出力例
 ```
 1.01
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_DIVBYZERO -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_divbyzero.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_divbyzero.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_divbyzero.md b/reference/cfenv/fe_divbyzero.md
index c40429d2b..56bf1bf3e 100644
--- a/reference/cfenv/fe_divbyzero.md
+++ b/reference/cfenv/fe_divbyzero.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FE_DIVBYZERO integer-constant-expression
+// または
+#undef FE_DIVBYZERO
 ```
 * integer-constant-expression[italic]
 
@@ -13,7 +15,8 @@
 
 「DIVBYZERO」は「divide-by-zero (ゼロによる除算)」の略称である。
 
-このマクロは、浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
+処理系がこの浮動小数点例外に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロは浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_DOWNWARD -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_downward.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_downward.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_downward.md b/reference/cfenv/fe_downward.md
index 3791056b6..d138e1b12 100644
--- a/reference/cfenv/fe_downward.md
+++ b/reference/cfenv/fe_downward.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FE_DOWNWARD integer-constant-expression
+// または
+#undef FE_DOWNWARD
 ```
 * integer-constant-expression[italic]
 
@@ -13,7 +15,8 @@
 
 このマクロは、標準ライブラリの丸め処理で使用される丸め方式をユーザーが選択するために使用する。
 
-このマクロの値は、整数の定数式として定義され、非負の値を持つ。
+処理系がこの丸め方式に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロの値は整数の定数式になり、非負の値を持つ。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_INEXACT -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_inexact.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_inexact.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_inexact.md b/reference/cfenv/fe_inexact.md
index 214919104..fb1bd7cdb 100644
--- a/reference/cfenv/fe_inexact.md
+++ b/reference/cfenv/fe_inexact.md
@@ -5,13 +5,16 @@
 
 ```cpp
 #define FE_INEXACT integer-constant-expression
+// または
+#undef FE_INEXACT
 ```
 * integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の演算が不正確な結果となったことを表す浮動小数点例外の種類。
 
-このマクロは、浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
+処理系がこの浮動小数点例外に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロは浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_INVALID -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_invalid.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_invalid.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_invalid.md b/reference/cfenv/fe_invalid.md
index 1dd7ae231..88241b180 100644
--- a/reference/cfenv/fe_invalid.md
+++ b/reference/cfenv/fe_invalid.md
@@ -5,13 +5,16 @@
 
 ```cpp
 #define FE_INVALID integer-constant-expression
+// または
+#undef FE_INVALID
 ```
 * integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数に対して不正な操作を行ったことを表す浮動小数点例外の種類。
 
-このマクロは、浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
+処理系がこの浮動小数点例外に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロは浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_OVERFLOW -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_overflow.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_overflow.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_overflow.md b/reference/cfenv/fe_overflow.md
index 87a621ef4..a9f0def58 100644
--- a/reference/cfenv/fe_overflow.md
+++ b/reference/cfenv/fe_overflow.md
@@ -5,13 +5,16 @@
 
 ```cpp
 #define FE_OVERFLOW integer-constant-expression
+// または
+#undef FE_OVERFLOW
 ```
 * integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の演算でオーバーフローが発生したことを表す浮動小数点例外の種類。
 
-このマクロは、浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
+処理系がこの浮動小数点例外に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロは浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_TONEAREST -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_tonearest.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_tonearest.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_tonearest.md b/reference/cfenv/fe_tonearest.md
index 039ab0703..baf9d47b5 100644
--- a/reference/cfenv/fe_tonearest.md
+++ b/reference/cfenv/fe_tonearest.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FE_TONEAREST integer-constant-expression
+// または
+#undef FE_TONEAREST
 ```
 * integer-constant-expression[italic]
 
@@ -15,7 +17,8 @@
 
 このマクロは、標準ライブラリの丸め処理で使用される丸め方式をユーザーが選択するために使用する。
 
-このマクロの値は、整数の定数式として定義され、非負の値を持つ。
+処理系がこの丸め方式に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロの値は整数の定数式になり、非負の値を持つ。
 
 
 ## 備考
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_TOWARDZERO -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_towardzero.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_towardzero.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_towardzero.md b/reference/cfenv/fe_towardzero.md
index 59850140b..dfdae7884 100644
--- a/reference/cfenv/fe_towardzero.md
+++ b/reference/cfenv/fe_towardzero.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FE_TOWARDZERO integer-constant-expression
+// または
+#undef FE_TOWARDZERO
 ```
 * integer-constant-expression[italic]
 
@@ -13,7 +15,8 @@
 
 このマクロは、標準ライブラリの丸め処理で使用される丸め方式をユーザーが選択するために使用する。
 
-このマクロの値は、整数の定数式として定義され、非負の値を持つ。
+処理系がこの丸め方式に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロの値は整数の定数式になり、非負の値を持つ。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_UNDERFLOW -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_underflow.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_underflow.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_underflow.md b/reference/cfenv/fe_underflow.md
index 4fdc0ee46..821fedaed 100644
--- a/reference/cfenv/fe_underflow.md
+++ b/reference/cfenv/fe_underflow.md
@@ -5,13 +5,16 @@
 
 ```cpp
 #define FE_UNDERFLOW integer-constant-expression
+// または
+#undef FE_UNDERFLOW
 ```
 * integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の演算でアンダーフローが発生したことを表す浮動小数点例外の種類。
 
-このマクロは、浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
+処理系がこの浮動小数点例外に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロは浮動小数点例外の状態を表すビット値である。他の浮動小数点例外マクロとAND (`&amp;amp;`) や OR (`|`)を使用して、複数のマクロを組み合わせて使用できる。
 
 ## 例
 ```cpp example
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_UPWARD -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_upward.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cfenv/fe_upward.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_upward.md b/reference/cfenv/fe_upward.md
index 24c867ba7..718cd5bbd 100644
--- a/reference/cfenv/fe_upward.md
+++ b/reference/cfenv/fe_upward.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FE_UPWARD integer-constant-expression
+// または
+#undef FE_UPWARD
 ```
 * integer-constant-expression[italic]
 
@@ -13,7 +15,8 @@
 
 このマクロは、標準ライブラリの丸め処理で使用される丸め方式をユーザーが選択するために使用する。
 
-このマクロの値は、整数の定数式として定義され、非負の値を持つ。
+処理系がこの丸め方式に対応している場合にこのマクロが定義される。
+マクロが定義されるとき、このマクロの値は整数の定数式になり、非負の値を持つ。
 
 
 ## 例
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_FAST_FMA -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_fast_fma.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cmath/fp_fast_fma.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_fast_fma.md b/reference/cmath/fp_fast_fma.md
index 4e23d7228..87e592dd5 100644
--- a/reference/cmath/fp_fast_fma.md
+++ b/reference/cmath/fp_fast_fma.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FP_FAST_FMA 1
+// または
+#undef FP_FAST_FMA
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_FAST_FMAF -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_fast_fmaf.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cmath/fp_fast_fmaf.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_fast_fmaf.md b/reference/cmath/fp_fast_fmaf.md
index 045ef8e00..74527dfe6 100644
--- a/reference/cmath/fp_fast_fmaf.md
+++ b/reference/cmath/fp_fast_fmaf.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FP_FAST_FMAF 1
+// または
+#undef FP_FAST_FMAF
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_FAST_FMAL -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_fast_fmal.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cmath/fp_fast_fmal.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_fast_fmal.md b/reference/cmath/fp_fast_fmal.md
index 819924966..37dd43922 100644
--- a/reference/cmath/fp_fast_fmal.md
+++ b/reference/cmath/fp_fast_fmal.md
@@ -5,6 +5,8 @@
 
 ```cpp
 #define FP_FAST_FMAL 1
+// または
+#undef FP_FAST_FMAL
 ```
 
 ## 概要
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>NAN -- fix(cmath): 条件付きで定義されるマクロについて #undef の場合も追記</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nan.html"/>
      <id>73c9263ea914a26ee06df0ada770e719fc84564d:reference/cmath/nan.md</id>
      <updated>2025-07-13T15:24:50+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nan.md b/reference/cmath/nan.md
index 7f5baa3be..c623e65f3 100644
--- a/reference/cmath/nan.md
+++ b/reference/cmath/nan.md
@@ -5,11 +5,14 @@
 
 ```cpp
 #define NAN constant-expression
+// または
+#undef NAN
 ```
 * constant-expression[italic]
 
 ## 概要
-`NaN`(Not a Number, 非数) がサポートされる場合、`float` の `quiet NaN` の定数式に展開される。
+処理系が `float` 型の quiet NaN (Not a Number, 非数) に対応している場合に定義される。
+`float` の quiet NaN の定数式に展開される。
 
 
 ## バージョン
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>errno -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cerrno/errno.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cerrno/errno.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cerrno/errno.md b/reference/cerrno/errno.md
index d3badf597..8a0460665 100644
--- a/reference/cerrno/errno.md
+++ b/reference/cerrno/errno.md
@@ -3,8 +3,9 @@
 * macro[meta id-type]
 
 ```cpp
-#define errno implementation-defined
+#define errno unspecified
 ```
+* unspecified[italic]
 
 ## 概要
 `errno` は、標準ライブラリのエラー状態を表すマクロである。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_ALL_EXCEPT -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_all_except.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_all_except.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_all_except.md b/reference/cfenv/fe_all_except.md
index c7d4159b9..93d2ac031 100644
--- a/reference/cfenv/fe_all_except.md
+++ b/reference/cfenv/fe_all_except.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_ALL_EXCEPT implementation-defined
+#define FE_ALL_EXCEPT unspecified
 ```
+* unspecified[italic]
 
 ## 概要
 全ての浮動小数点例外マクロをビットORでつなぐことによって実装で定義されるマクロ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_DIVBYZERO -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_divbyzero.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_divbyzero.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_divbyzero.md b/reference/cfenv/fe_divbyzero.md
index 97b2dd8a6..c40429d2b 100644
--- a/reference/cfenv/fe_divbyzero.md
+++ b/reference/cfenv/fe_divbyzero.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_DIVBYZERO implementation-defined
+#define FE_DIVBYZERO integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数に対してゼロで除算されたことを表す浮動小数点例外の種類。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_DOWNWARD -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_downward.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_downward.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_downward.md b/reference/cfenv/fe_downward.md
index 8aa5169fc..3791056b6 100644
--- a/reference/cfenv/fe_downward.md
+++ b/reference/cfenv/fe_downward.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_DOWNWARD implementation-defined
+#define FE_DOWNWARD integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の丸め方式として、「負の無限大方向への丸め (切り下げ, floor, round down)」を表すマクロ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_INEXACT -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_inexact.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_inexact.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_inexact.md b/reference/cfenv/fe_inexact.md
index 6fbfdde5f..214919104 100644
--- a/reference/cfenv/fe_inexact.md
+++ b/reference/cfenv/fe_inexact.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_INEXACT implementation-defined
+#define FE_INEXACT integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の演算が不正確な結果となったことを表す浮動小数点例外の種類。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_INVALID -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_invalid.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_invalid.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_invalid.md b/reference/cfenv/fe_invalid.md
index a015347a1..1dd7ae231 100644
--- a/reference/cfenv/fe_invalid.md
+++ b/reference/cfenv/fe_invalid.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_INVALID implementation-defined
+#define FE_INVALID integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数に対して不正な操作を行ったことを表す浮動小数点例外の種類。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_OVERFLOW -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_overflow.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_overflow.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_overflow.md b/reference/cfenv/fe_overflow.md
index 4ff0bdbd0..87a621ef4 100644
--- a/reference/cfenv/fe_overflow.md
+++ b/reference/cfenv/fe_overflow.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_OVERFLOW implementation-defined
+#define FE_OVERFLOW integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の演算でオーバーフローが発生したことを表す浮動小数点例外の種類。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_TONEAREST -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_tonearest.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_tonearest.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_tonearest.md b/reference/cfenv/fe_tonearest.md
index 1ce5fd200..039ab0703 100644
--- a/reference/cfenv/fe_tonearest.md
+++ b/reference/cfenv/fe_tonearest.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_TONEAREST implementation-defined
+#define FE_TONEAREST integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の丸め方式として、「最も近い値への丸め (round to nearest)」を表すマクロ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_TOWARDZERO -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_towardzero.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_towardzero.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_towardzero.md b/reference/cfenv/fe_towardzero.md
index 3847072da..59850140b 100644
--- a/reference/cfenv/fe_towardzero.md
+++ b/reference/cfenv/fe_towardzero.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_TOWARDZERO implementation-defined
+#define FE_TOWARDZERO integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の丸め方式として、「ゼロ方向への丸め (切り捨て, trunc)」を表すマクロ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_UNDERFLOW -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_underflow.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_underflow.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_underflow.md b/reference/cfenv/fe_underflow.md
index 94660cdf3..4fdc0ee46 100644
--- a/reference/cfenv/fe_underflow.md
+++ b/reference/cfenv/fe_underflow.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_UNDERFLOW implementation-defined
+#define FE_UNDERFLOW integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の演算でアンダーフローが発生したことを表す浮動小数点例外の種類。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FE_UPWARD -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fe_upward.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fe_upward.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fe_upward.md b/reference/cfenv/fe_upward.md
index 52f82e09e..24c867ba7 100644
--- a/reference/cfenv/fe_upward.md
+++ b/reference/cfenv/fe_upward.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FE_UPWARD implementation-defined
+#define FE_UPWARD integer-constant-expression
 ```
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数の丸め方式として、「正の無限大方向への丸め (切り上げ, ceil, round up)」を表すマクロ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>fexcept_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cfenv/fexcept_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cfenv/fexcept_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cfenv/fexcept_t.md b/reference/cfenv/fexcept_t.md
index 2c5b4dcdf..7b579b8e0 100644
--- a/reference/cfenv/fexcept_t.md
+++ b/reference/cfenv/fexcept_t.md
@@ -6,9 +6,10 @@
 
 ```cpp
 namespace std {
-  using fexcept_t = implementation-defined;
+  using fexcept_t = unspecified;
 }
 ```
+* unspecified[italic]
 
 ## 概要
 実装が持つ浮動小数点例外の状態フラグを表す型。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>double_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/double_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/double_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/double_t.md b/reference/cmath/double_t.md
index 57ea716c5..f0b1441be 100644
--- a/reference/cmath/double_t.md
+++ b/reference/cmath/double_t.md
@@ -6,9 +6,10 @@
 
 ```cpp
 namespace std {
-  using double_t = implementation-defined;
+  using double_t = floating-type;
 }
 ```
+* floating-type[italic]
 
 ## 概要
 `double` と同じかそれより広い範囲の値を持つ浮動小数点数型を表す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>float_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/float_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/float_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/float_t.md b/reference/cmath/float_t.md
index d05aa527b..c63a8260a 100644
--- a/reference/cmath/float_t.md
+++ b/reference/cmath/float_t.md
@@ -6,9 +6,10 @@
 
 ```cpp
 namespace std {
-  using float_t = implementation-defined;
+  using float_t = floating-type;
 }
 ```
+* floating-type[italic]
 
 ## 概要
 `float` と同じかそれより広い範囲の値を持つ浮動小数点数型を表す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_ILOGB0 -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_ilogb0.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_ilogb0.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_ilogb0.md b/reference/cmath/fp_ilogb0.md
index ea747b621..1c20eb7a1 100644
--- a/reference/cmath/fp_ilogb0.md
+++ b/reference/cmath/fp_ilogb0.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_ILOGB0 implementation_defined
+#define FP_ILOGB0 integer-constant-expression
 ```
-* implementation_defined[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 `FP_ILOGB0` は、[`std::ilogb`](ilogb.md)`(0)` の戻り値を表す整数定数式である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_ILOGBNAN -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_ilogbnan.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_ilogbnan.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_ilogbnan.md b/reference/cmath/fp_ilogbnan.md
index dac15985c..9f13217ea 100644
--- a/reference/cmath/fp_ilogbnan.md
+++ b/reference/cmath/fp_ilogbnan.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_ILOGBNAN implementation_defined
+#define FP_ILOGBNAN integer-constant-expression
 ```
-* implementation_defined[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 `FP_ILOGBNAN` は、[`std::ilogb()`](ilogb.md) に `NaN` を渡したときの戻り値を表す整数定数式である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_INFINITE -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_infinite.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_infinite.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_infinite.md b/reference/cmath/fp_infinite.md
index adfd5b925..755ac6bc1 100644
--- a/reference/cmath/fp_infinite.md
+++ b/reference/cmath/fp_infinite.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_INFINITE integer_constant_expression
+#define FP_INFINITE integer-constant-expression
 ```
-* integer_constant_expression[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数が（正または負の）無限大であることを表す整数定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_NAN -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_nan.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_nan.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_nan.md b/reference/cmath/fp_nan.md
index ac5bf9cc3..d681b3a44 100644
--- a/reference/cmath/fp_nan.md
+++ b/reference/cmath/fp_nan.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_NAN integer_constant_expression
+#define FP_NAN integer-constant-expression
 ```
-* integer_constant_expression[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数が `NaN` であることを表すを表す整数定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_NORMAL -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_normal.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_normal.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_normal.md b/reference/cmath/fp_normal.md
index 5d9128781..35f1621cb 100644
--- a/reference/cmath/fp_normal.md
+++ b/reference/cmath/fp_normal.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_NORMAL integer_constant_expression
+#define FP_NORMAL integer-constant-expression
 ```
-* integer_constant_expression[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数が正規化数であることを表す整数定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_SUBNORMAL -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_subnormal.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_subnormal.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_subnormal.md b/reference/cmath/fp_subnormal.md
index c011449b6..e8ffdff3c 100644
--- a/reference/cmath/fp_subnormal.md
+++ b/reference/cmath/fp_subnormal.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_SUBNORMAL integer_constant_expression
+#define FP_SUBNORMAL integer-constant-expression
 ```
-* integer_constant_expression[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数が非正規化数であることを表す整数定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>FP_ZERO -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/fp_zero.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/fp_zero.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/fp_zero.md b/reference/cmath/fp_zero.md
index bdcdcd047..1bfc9d646 100644
--- a/reference/cmath/fp_zero.md
+++ b/reference/cmath/fp_zero.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define FP_ZERO integer_constant_expression
+#define FP_ZERO integer-constant-expression
 ```
-* integer_constant_expression[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 浮動小数点数が（正または負の） 0 であることを表す整数定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>HUGE_VAL -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/huge_val.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/huge_val.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/huge_val.md b/reference/cmath/huge_val.md
index c2bccc8d9..ab97b1879 100644
--- a/reference/cmath/huge_val.md
+++ b/reference/cmath/huge_val.md
@@ -3,8 +3,9 @@
 * macro[meta id-type]
 
 ```cpp
-#define HUGE_VAL implementation-defined
+#define HUGE_VAL constant-expression
 ```
+* constant-expression[italic]
 
 ## 概要
 `double` 型の正の値の定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>HUGE_VALF -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/huge_valf.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/huge_valf.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/huge_valf.md b/reference/cmath/huge_valf.md
index c335721e9..af0e69185 100644
--- a/reference/cmath/huge_valf.md
+++ b/reference/cmath/huge_valf.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define HUGE_VALF implementation-defined
+#define HUGE_VALF constant-expression
 ```
+* constant-expression[italic]
 
 ## 概要
 `float` 型の正の値の定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>HUGE_VALL -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/huge_vall.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/huge_vall.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/huge_vall.md b/reference/cmath/huge_vall.md
index 87974c6fe..edff3f473 100644
--- a/reference/cmath/huge_vall.md
+++ b/reference/cmath/huge_vall.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define HUGE_VALL implementation-defined
+#define HUGE_VALL constant-expression
 ```
+* constant-expression[italic]
 
 ## 概要
 `long double` 型の正の値の定数式。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>INFINITY -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/infinity.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/infinity.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/infinity.md b/reference/cmath/infinity.md
index c54fd23c8..56f223c8a 100644
--- a/reference/cmath/infinity.md
+++ b/reference/cmath/infinity.md
@@ -4,8 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define INFINITY some_expression
+#define INFINITY constant-expression
 ```
+* constant-expression[italic]
 
 ## 概要
 `float` の無限大がサポートされる場合、`float` 型の正の無限大である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>NAN -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cmath/nan.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cmath/nan.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cmath/nan.md b/reference/cmath/nan.md
index f27fd5ebe..7f5baa3be 100644
--- a/reference/cmath/nan.md
+++ b/reference/cmath/nan.md
@@ -4,9 +4,9 @@
 * cpp11[meta cpp]
 
 ```cpp
-#define NAN constant_expression
+#define NAN constant-expression
 ```
-* constant_expression[italic]
+* constant-expression[italic]
 
 ## 概要
 `NaN`(Not a Number, 非数) がサポートされる場合、`float` の `quiet NaN` の定数式に展開される。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>max_align_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstddef/max_align_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cstddef/max_align_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstddef/max_align_t.md b/reference/cstddef/max_align_t.md
index 0c04c6d60..be64e1a27 100644
--- a/reference/cstddef/max_align_t.md
+++ b/reference/cstddef/max_align_t.md
@@ -6,9 +6,10 @@
 
 ```cpp
 namespace std {
-  using max_align_t = implementation-defined;
+  using max_align_t = object-type;
 }
 ```
+* object-type[italic]
 
 ## 概要
 `std::max_align_t`のアライメントサイズは、スカラー型の中の最も大きなアライメントサイズと同じかそれ以上である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>offsetof -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstddef/offsetof.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cstddef/offsetof.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstddef/offsetof.md b/reference/cstddef/offsetof.md
index 0f2c5e56b..f8a757c7f 100644
--- a/reference/cstddef/offsetof.md
+++ b/reference/cstddef/offsetof.md
@@ -3,9 +3,9 @@
 * macro[meta id-type]
 
 ```cpp
-#define offsetof(type, member) see-below
+#define offsetof(type, member) integer-constant-expression
 ```
-* see-below[italic]
+* integer-constant-expression[italic]
 
 ## 概要
 このマクロ関数は、構造体型 `type` のメンバ `member` へのオフセット値をバイト数で返す。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>ptrdiff_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstddef/ptrdiff_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cstddef/ptrdiff_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstddef/ptrdiff_t.md b/reference/cstddef/ptrdiff_t.md
index a61cb3231..997f74182 100644
--- a/reference/cstddef/ptrdiff_t.md
+++ b/reference/cstddef/ptrdiff_t.md
@@ -5,9 +5,10 @@
 
 ```cpp
 namespace std {
-  using ptrdiff_t = implementation-defined;
+  using ptrdiff_t = signed-integer-type;
 }
 ```
+* signed-integer-type[italic]
 
 ## 概要
 `ptrdiff_t`は、2 つのポインタの減算の結果を示す型である。これは符号付き整数型であり、互換性のある単純データ型へキャストすることができる。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>size_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstddef/size_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cstddef/size_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstddef/size_t.md b/reference/cstddef/size_t.md
index 55cd26b59..d2e450a91 100644
--- a/reference/cstddef/size_t.md
+++ b/reference/cstddef/size_t.md
@@ -5,9 +5,10 @@
 
 ```cpp
 namespace std {
-  using size_t = implementation-defined;
+  using size_t = unsigned-integer-type;
 }
 ```
+* unsigned-integer-type[italic]
 
 ## 概要
 `size_t`は、オブジェクトのバイト数を表現できる程度に十分に大きい符号なし整数型である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>MB_CUR_MAX -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/cstdlib/mb_cur_max.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/cstdlib/mb_cur_max.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/cstdlib/mb_cur_max.md b/reference/cstdlib/mb_cur_max.md
index 3872e41c3..f3bb3fafa 100644
--- a/reference/cstdlib/mb_cur_max.md
+++ b/reference/cstdlib/mb_cur_max.md
@@ -3,8 +3,9 @@
 * macro[meta id-type]
 
 ```cpp
-#define MB_CUR_MAX implementation-defined
+#define MB_CUR_MAX positive-integer-expression
 ```
+* positive-integer-expression[italic]
 
 ## 概要
 現在のロケールのマルチバイト文字の最大バイト数を示すマクロ。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
    <entry>
      <title>time_t -- fix(c*): 処理系定義でないのに implementation-defined になっているものを修正</title>
      <link href="https://cpprefjp.github.io/reference/ctime/time_t.html"/>
      <id>da83049f02494ae11e27bf3a0a74d0afc2acc029:reference/ctime/time_t.md</id>
      <updated>2025-07-13T15:17:26+09:00</updated>
      
        <summary type="html">&lt;pre&gt;&lt;code&gt;diff --git a/reference/ctime/time_t.md b/reference/ctime/time_t.md
index bcaf6ab18..e97935058 100644
--- a/reference/ctime/time_t.md
+++ b/reference/ctime/time_t.md
@@ -5,9 +5,12 @@
 
 ```cpp
 namespace std {
-  using time_t = implementation-defined;
+  using time_t = integer-type; // C++11 (C99) 以前
+  using time_t = real-type;    // C++14 (C11) 以降
 }
 ```
+* integer-type[italic]
+* real-type[italic]
 
 ## 概要
 `time_t`は、1970年1月1日からの経過時間 (UNIX時間と呼ばれる) を表すための、算術型の別名である。
&lt;/code&gt;&lt;/pre&gt;</summary>
      
      <author>
        <name>Koichi Murase</name>
        <email>myoga.murase@gmail.com</email>
      </author>
    </entry>
  
</feed>